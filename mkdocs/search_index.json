{
    "docs": [
        {
            "location": "/",
            "text": "Command line examples\n\n\nInspired by \nJoshua Levy\n and his great \nThe-Art-Of-Command-Line\n\n\n\n\nIt's only my view on useful commands and this examples are useful for me in first place.\n\n\n\n\nAbout\n\n\n\n\nDmitr Ivanov\n\n\nGitHub repo\n\n\n\n\nUnsorted info:\n\n\n\n\nJoining all similarly prefixed files, for example, \"_tar.gz.1of2\" and \"_tar.gz.2of2\".\n\n\n\n\n# Unix\ncat \"FileName_tar.gz.1of3\" \"FileName_tar.gz.2of3\" \"FileName_tar.gz.3of3\" > \"FileName.tar.gz\"\n# Windows\ncopy /b \"FileName_tar.gz.1of3\"+\"FileName_tar.gz.2of3\"+\"FileName_tar.gz.3of3\" \"FileName.tar.gz\"",
            "title": "Home"
        },
        {
            "location": "/#command-line-examples",
            "text": "Inspired by  Joshua Levy  and his great  The-Art-Of-Command-Line   It's only my view on useful commands and this examples are useful for me in first place.",
            "title": "Command line examples"
        },
        {
            "location": "/#about",
            "text": "Dmitr Ivanov  GitHub repo",
            "title": "About"
        },
        {
            "location": "/#unsorted-info",
            "text": "Joining all similarly prefixed files, for example, \"_tar.gz.1of2\" and \"_tar.gz.2of2\".   # Unix\ncat \"FileName_tar.gz.1of3\" \"FileName_tar.gz.2of3\" \"FileName_tar.gz.3of3\" > \"FileName.tar.gz\"\n# Windows\ncopy /b \"FileName_tar.gz.1of3\"+\"FileName_tar.gz.2of3\"+\"FileName_tar.gz.3of3\" \"FileName.tar.gz\"",
            "title": "Unsorted info:"
        },
        {
            "location": "/Databases/Links/",
            "text": "Adminer - simple database management php console\n\n\nJust one file - so could run from every place\n\n\n\n\nAdminer site\n\n\nAdminer repo\n\n\n\n\nDan Morgan's Oracle Library\n\n\nHuge amount of information about Oracle\n\n\n\n\nMorgan's Library",
            "title": "Links"
        },
        {
            "location": "/Databases/Links/#adminer-simple-database-management-php-console",
            "text": "Just one file - so could run from every place   Adminer site  Adminer repo",
            "title": "Adminer - simple database management php console"
        },
        {
            "location": "/Databases/Links/#dan-morgans-oracle-library",
            "text": "Huge amount of information about Oracle   Morgan's Library",
            "title": "Dan Morgan's Oracle Library"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/",
            "text": "Find all locking sessions\n\n\nSELECT * FROM v$lock;\n\n\n\n\nView all blocking sessions ver.1\n\n\nSELECT s.blocking_session, s.sid, s.serial#, s.seconds_in_wait FROM v$session s WHERE blocking_session IS NOT NULL;\n\n\n\n\nView all blocking sessions ver.2\n\n\nSELECT s1.username || '@' || s1.machine\n    || ' ( SID=' || s1.sid || ' )  is blocking '\n    || s2.username || '@' || s2.machine || ' ( SID=' || s2.sid || ' ) ' AS blocking_status\n    FROM v$lock l1, v$session s1, v$lock l2, v$session s2\n    WHERE s1.sid=l1.sid AND s2.sid=l2.sid\n    AND l1.BLOCK=1 AND l2.request > 0\n    AND l1.id1 = l2.id1\n    AND l1.id2 = l2.id2;\n\n\n\n\nView SID and ID of blocking sessions\n\n\nSELECT sid, id1 FROM v$lock WHERE TYPE='TM';\n\n\n\n\nView the name of blocking session\n\n\nSELECT object_name FROM dba_objects WHERE object_id=101482;\n\n\n\n\nKill session: \" ALTER SYSTEM KILL SESSION 'SID,ID' \"\n\n\nALTER SYSTEM KILL SESSION '1621,24543';\n\n\n\n\nView all active sessions\n\n\nSELECT s.inst_id,\n       s.sid,\n       s.serial#,\n       p.spid,\n       s.username,\n       s.program\nFROM   gv$session s\n       JOIN gv$process p ON p.addr = s.paddr AND p.inst_id = s.inst_id\nWHERE  s.type != 'BACKGROUND';",
            "title": "Blocking sessions"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#find-all-locking-sessions",
            "text": "SELECT * FROM v$lock;",
            "title": "Find all locking sessions"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#view-all-blocking-sessions-ver1",
            "text": "SELECT s.blocking_session, s.sid, s.serial#, s.seconds_in_wait FROM v$session s WHERE blocking_session IS NOT NULL;",
            "title": "View all blocking sessions ver.1"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#view-all-blocking-sessions-ver2",
            "text": "SELECT s1.username || '@' || s1.machine\n    || ' ( SID=' || s1.sid || ' )  is blocking '\n    || s2.username || '@' || s2.machine || ' ( SID=' || s2.sid || ' ) ' AS blocking_status\n    FROM v$lock l1, v$session s1, v$lock l2, v$session s2\n    WHERE s1.sid=l1.sid AND s2.sid=l2.sid\n    AND l1.BLOCK=1 AND l2.request > 0\n    AND l1.id1 = l2.id1\n    AND l1.id2 = l2.id2;",
            "title": "View all blocking sessions ver.2"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#view-sid-and-id-of-blocking-sessions",
            "text": "SELECT sid, id1 FROM v$lock WHERE TYPE='TM';",
            "title": "View SID and ID of blocking sessions"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#view-the-name-of-blocking-session",
            "text": "SELECT object_name FROM dba_objects WHERE object_id=101482;",
            "title": "View the name of blocking session"
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#kill-session-alter-system-kill-session-sidid",
            "text": "ALTER SYSTEM KILL SESSION '1621,24543';",
            "title": "Kill session: \" ALTER SYSTEM KILL SESSION 'SID,ID' \""
        },
        {
            "location": "/Databases/Oracle/Blocking_sessions/#view-all-active-sessions",
            "text": "SELECT s.inst_id,\n       s.sid,\n       s.serial#,\n       p.spid,\n       s.username,\n       s.program\nFROM   gv$session s\n       JOIN gv$process p ON p.addr = s.paddr AND p.inst_id = s.inst_id\nWHERE  s.type != 'BACKGROUND';",
            "title": "View all active sessions"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/",
            "text": "GUI\n\n\nyum groups install \"GNOME Desktop\"\nstartx\n\n\n\n\nDatabase pre-requirements\n\n\n# Dependencies\nyum install binutils compat-libcap1 gcc gcc-c++ glibc glibc.i686 glibc-devel glibc.i686 ksh libaio libaio.i686 libaio-devel libaio-devel.i686 libgcc libgcc.i686 libstdc++ libstdc++l7.i686 libstdc++-devel libstdc++-devel.i686 compat-libstdc++-33 compat-libstdc++-33.i686 libXi libXi.i686 libXtst libXtst.i686 make sysstat \n\n# Kernel\nMEMTOTAL=$(free -b | sed -n '2p' | awk '{print $2}')\nSHMMAX=$(expr $MEMTOTAL / 2)\nPAGESIZE=$(getconf PAGE_SIZE)\n\ncat >> /etc/sysctl.conf << EOF\nfs.aio-max-nr = 1048576\nfs.file-max = 6815744\nkernel.shmmax = $SHMMAX\nkernel.shmall = `expr \\( $SHMMAX / $PAGESIZE \\) \\* \\( $SHMMNI / 16 \\)`\nkernel.shmmni = 4096\nkernel.sem = 250 32000 100 128\nnet.ipv4.ip_local_port_range = 9000 65500\nnet.core.rmem_default = 262144\nnet.core.rmem_max = 4194304\nnet.core.wmem_default = 262144\nnet.core.wmem_max = 1048576\nEOF\n\nsysctl -p \n\n# Users and groups\ni=54321; for group in oinstall dba backupdba oper dgdba kmdba; do\ngroupadd -g $i $group; i=`expr $i + 1`\ndone\n\nuseradd -u 1200 -g oinstall -G dba,oper,backupdba,dgdba,kmdba -d /home/oracle oracle \npasswd oracle \n\n# Folders\nmkdir -p /u01/app/oracle \nchown -R oracle:oinstall /u01/app \nchmod -R 775 /u01 \n\nvim /etc/pam.d/login \n# Insert after \"session required pam_namespace.so\":\nsession    required     pam_limits.so\n\nvim /etc/security/limits.conf \n# Add to the end of file:\n\noracle  soft  nproc   2047\noracle  hard  nproc   16384\noracle  soft  nofile  1024\noracle  hard  nofile  65536\noracle  soft  stack   10240\noracle  hard  stack   32768\n\nsu - oracle\nvim ~/.bash_profile \n# Add to the end\numask 022\nexport ORACLE_BASE=/u01/app/oracle \n\n\n\n\nDatabase software installation\n\n\n# Upload installation software to /tmp:\nscp linuxamd64_12102_database_se2_1of2.zip oracle@db_server:/tmp/\nscp linuxamd64_12102_database_se2_2of2.zip oracle@db_server:/tmp/\n\n# Login to DB server with X-Forwarding enabled:\nssh -Y oracle@db_server\n\n# Unpack archives:\nunzip linuxamd64_12102_database_se2_1of2.zip\nunzip linuxamd64_12102_database_se2_2of2.zip\n\n# Run Oracle universal installer\ncd database/\n./runInstaller \n\n\n\n\nJust follow installation steps in GUI:\n\n Step 01. Enter your \nE-Mail\n and Oracle Enterproise support \npassword\n, if you have one\n\n Step 02. \n(.)\n Install database software only (we'll install database later)\n\n Step 03. Select parovriate type of installation. In simple case choose \n\"Single instance database installation\"\n\n\n Step 04. Choose prefered language. But \nEnglish\n is recommended in all cases.\n\n Step 05. Select edidtion. It depends of distribution package. In this case \nStandard Edition Two\n\n\n Step 06. Choose path for oracle home directory. In our case everything will filled up by default.\n\n Step 07. Choose path for oracle inventory. In our case everything will filled up by default.\n\n Step 08. Choose oracle grroups. In our case everything will filled up by default. \n\n Step 09. On this step you'll face swap error in most cases. Just ignore it. In any other errors look at oracle forum. \nDO NOT IGNORE ANY ERRORS EXCEPT OF SWAP\n\n\n Step 10. Install oracle database software\n\n Step 11. On this step installater demand you to execute 2 spripts from root user. Just run them.\n\n Step 12. Finish\n\n\nvim ~/.bash_profile \n\n# Add to the end of file: \n\nexport ORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1\nexport PATH=$PATH:$ORACLE_HOME/bin\n\n\n\n\nNet listener\n\n\nJust run \nnetca\n from oracle user and follow steps of configuration wizard\n\n\n# Login to DB server with X-Forwarding enabled:                                                                                                                                                                \nssh -Y oracle@db_server\n\n# Run Network listener configuration wizard:\nnetca\n\n\n\n\nDatabase\n\n\n# Login to DB server with X-Forwarding enabled:                                                                                                                                                                \nssh -Y oracle@db_server\n\n# Run Database configuration wizard:\ndbca\n\n\n\n\n\nFollow installation steps for fat installation:\n\n Step 01. Choose \n(.) Create database\n\n\n Step 02. \n(.)\n Create a database with default configuration\n\n Global Database name: input what name you like\n\n Storage type: \nFile System\n (if you don't have ASM)\n\n Database character set: \nAL32UTF8 - Unicode UTF-8 Universal character set\n\n\n Choose password for sysdba account.\n\n Uncheck \n[]Create As Container Database\n\n\n Step 03. Look for any errors\n\n Step 04. Next\n* Step 05. Finish\n\n\nvim /etc/oratab \n\n#Set last synbol from \"N\" to \"Y\"\n<database_SID>:/u01/app/oracle/product/12.1.0/dbhome_1:Y\n\nvim ~/.bash_profile \n# Add to the end of file:\n\nexport ORACLE_SID=<database_SID>\n\n\n\n\n\nAutostart\n\n\n\n\nOracle environemnt:\n\n\n\n\nvim /etc/sysconfig/<SID>.oracledb\n\n# Contents\nORACLE_BASE=/u01/app/oracle\nORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1\nORACLE_SID=<your_SID>\n\n\n\n\n\n\nNet listner service:\n\n\n\n\nvim /usr/lib/systemd/system/<SID>@lsnrctl.service \n\n# Contents\n[Unit]\nDescription=Oracle Net Listener\nAfter=network.target\n\n[Service]\nType=forking\nEnvironmentFile=/etc/sysconfig/<SID>.oracledb\nExecStart=/u01/app/oracle/product/12.1.0/dbhome_1/bin/lsnrctl start\nExecStop=/u01/app/oracle/product/12.1.0/dbhome_1/bin/lsnrctl stop\nUser=oracle\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n\n\n\nDatabase service:\n\n\n\n\nvim /usr/lib/systemd/system/<SID>@oracledb.service \n\n# Contents\n[Unit]\nDescription=Oracle Database service\nAfter=network.target lsnrctl.service\n\n[Service]\nType=forking\nEnvironmentFile=/etc/sysconfig/<SID>.oracledb\nExecStart=/u01/app/oracle/product/12.1.0/dbhome_1/bin/dbstart /u01/app/oracle/product/12.1.0/dbhome_1\nExecStop=/u01/app/oracle/product/12.1.0/dbhome_1/bin/dbshut /u01/app/oracle/product/12.1.0/dbhome_1\nUser=oracle\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n\n\n\nSystemd reload and enable:\n\n\n\n\nsystemctl daemon-reload \nsystemctl enable <SID>@lsnrctl \nsystemctl enable <SID>@oracledb",
            "title": "CentOS 7 Installation"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/#gui",
            "text": "yum groups install \"GNOME Desktop\"\nstartx",
            "title": "GUI"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/#database-pre-requirements",
            "text": "# Dependencies\nyum install binutils compat-libcap1 gcc gcc-c++ glibc glibc.i686 glibc-devel glibc.i686 ksh libaio libaio.i686 libaio-devel libaio-devel.i686 libgcc libgcc.i686 libstdc++ libstdc++l7.i686 libstdc++-devel libstdc++-devel.i686 compat-libstdc++-33 compat-libstdc++-33.i686 libXi libXi.i686 libXtst libXtst.i686 make sysstat \n\n# Kernel\nMEMTOTAL=$(free -b | sed -n '2p' | awk '{print $2}')\nSHMMAX=$(expr $MEMTOTAL / 2)\nPAGESIZE=$(getconf PAGE_SIZE)\n\ncat >> /etc/sysctl.conf << EOF\nfs.aio-max-nr = 1048576\nfs.file-max = 6815744\nkernel.shmmax = $SHMMAX\nkernel.shmall = `expr \\( $SHMMAX / $PAGESIZE \\) \\* \\( $SHMMNI / 16 \\)`\nkernel.shmmni = 4096\nkernel.sem = 250 32000 100 128\nnet.ipv4.ip_local_port_range = 9000 65500\nnet.core.rmem_default = 262144\nnet.core.rmem_max = 4194304\nnet.core.wmem_default = 262144\nnet.core.wmem_max = 1048576\nEOF\n\nsysctl -p \n\n# Users and groups\ni=54321; for group in oinstall dba backupdba oper dgdba kmdba; do\ngroupadd -g $i $group; i=`expr $i + 1`\ndone\n\nuseradd -u 1200 -g oinstall -G dba,oper,backupdba,dgdba,kmdba -d /home/oracle oracle \npasswd oracle \n\n# Folders\nmkdir -p /u01/app/oracle \nchown -R oracle:oinstall /u01/app \nchmod -R 775 /u01 \n\nvim /etc/pam.d/login \n# Insert after \"session required pam_namespace.so\":\nsession    required     pam_limits.so\n\nvim /etc/security/limits.conf \n# Add to the end of file:\n\noracle  soft  nproc   2047\noracle  hard  nproc   16384\noracle  soft  nofile  1024\noracle  hard  nofile  65536\noracle  soft  stack   10240\noracle  hard  stack   32768\n\nsu - oracle\nvim ~/.bash_profile \n# Add to the end\numask 022\nexport ORACLE_BASE=/u01/app/oracle",
            "title": "Database pre-requirements"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/#database-software-installation",
            "text": "# Upload installation software to /tmp:\nscp linuxamd64_12102_database_se2_1of2.zip oracle@db_server:/tmp/\nscp linuxamd64_12102_database_se2_2of2.zip oracle@db_server:/tmp/\n\n# Login to DB server with X-Forwarding enabled:\nssh -Y oracle@db_server\n\n# Unpack archives:\nunzip linuxamd64_12102_database_se2_1of2.zip\nunzip linuxamd64_12102_database_se2_2of2.zip\n\n# Run Oracle universal installer\ncd database/\n./runInstaller   Just follow installation steps in GUI:  Step 01. Enter your  E-Mail  and Oracle Enterproise support  password , if you have one  Step 02.  (.)  Install database software only (we'll install database later)  Step 03. Select parovriate type of installation. In simple case choose  \"Single instance database installation\"   Step 04. Choose prefered language. But  English  is recommended in all cases.  Step 05. Select edidtion. It depends of distribution package. In this case  Standard Edition Two   Step 06. Choose path for oracle home directory. In our case everything will filled up by default.  Step 07. Choose path for oracle inventory. In our case everything will filled up by default.  Step 08. Choose oracle grroups. In our case everything will filled up by default.   Step 09. On this step you'll face swap error in most cases. Just ignore it. In any other errors look at oracle forum.  DO NOT IGNORE ANY ERRORS EXCEPT OF SWAP   Step 10. Install oracle database software  Step 11. On this step installater demand you to execute 2 spripts from root user. Just run them.  Step 12. Finish  vim ~/.bash_profile \n\n# Add to the end of file: \n\nexport ORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1\nexport PATH=$PATH:$ORACLE_HOME/bin",
            "title": "Database software installation"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/#net-listener",
            "text": "Just run  netca  from oracle user and follow steps of configuration wizard  # Login to DB server with X-Forwarding enabled:                                                                                                                                                                \nssh -Y oracle@db_server\n\n# Run Network listener configuration wizard:\nnetca",
            "title": "Net listener"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/#database",
            "text": "# Login to DB server with X-Forwarding enabled:                                                                                                                                                                \nssh -Y oracle@db_server\n\n# Run Database configuration wizard:\ndbca  Follow installation steps for fat installation:  Step 01. Choose  (.) Create database   Step 02.  (.)  Create a database with default configuration  Global Database name: input what name you like  Storage type:  File System  (if you don't have ASM)  Database character set:  AL32UTF8 - Unicode UTF-8 Universal character set   Choose password for sysdba account.  Uncheck  []Create As Container Database   Step 03. Look for any errors  Step 04. Next\n* Step 05. Finish  vim /etc/oratab \n\n#Set last synbol from \"N\" to \"Y\"\n<database_SID>:/u01/app/oracle/product/12.1.0/dbhome_1:Y\n\nvim ~/.bash_profile \n# Add to the end of file:\n\nexport ORACLE_SID=<database_SID>",
            "title": "Database"
        },
        {
            "location": "/Databases/Oracle/CentOS_7_Installation/#autostart",
            "text": "Oracle environemnt:   vim /etc/sysconfig/<SID>.oracledb\n\n# Contents\nORACLE_BASE=/u01/app/oracle\nORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1\nORACLE_SID=<your_SID>   Net listner service:   vim /usr/lib/systemd/system/<SID>@lsnrctl.service \n\n# Contents\n[Unit]\nDescription=Oracle Net Listener\nAfter=network.target\n\n[Service]\nType=forking\nEnvironmentFile=/etc/sysconfig/<SID>.oracledb\nExecStart=/u01/app/oracle/product/12.1.0/dbhome_1/bin/lsnrctl start\nExecStop=/u01/app/oracle/product/12.1.0/dbhome_1/bin/lsnrctl stop\nUser=oracle\n\n[Install]\nWantedBy=multi-user.target   Database service:   vim /usr/lib/systemd/system/<SID>@oracledb.service \n\n# Contents\n[Unit]\nDescription=Oracle Database service\nAfter=network.target lsnrctl.service\n\n[Service]\nType=forking\nEnvironmentFile=/etc/sysconfig/<SID>.oracledb\nExecStart=/u01/app/oracle/product/12.1.0/dbhome_1/bin/dbstart /u01/app/oracle/product/12.1.0/dbhome_1\nExecStop=/u01/app/oracle/product/12.1.0/dbhome_1/bin/dbshut /u01/app/oracle/product/12.1.0/dbhome_1\nUser=oracle\n\n[Install]\nWantedBy=multi-user.target   Systemd reload and enable:   systemctl daemon-reload \nsystemctl enable <SID>@lsnrctl \nsystemctl enable <SID>@oracledb",
            "title": "Autostart"
        },
        {
            "location": "/Databases/Oracle/OJDBC/",
            "text": "BUG: 9632480\n\n\nOJDBC 12.1.0.2 - BUG: ORA-01000: maximum open cursors exceeded\n\n\nWe need:\n\n\n\n\nojdbc7.jar\n\n\np19632480_121020_Generic.zip\n\n\nJRE\n\n\n\n\n\n\nWe need to update OracleDatabaseMetaData.class in our ojdbc7.jar archive\n\n\n\n\nunzip p19632480_121020_Generic.zip\n\n\n\n\nGet folder \n./p19632480_121020_Generic/19632480/files/jdbc/lib/ojdbc7.jar\n from archvive and place it to \nojdbc7.jar\n file location\n\n\nMake sure that your JAVA_HOME is exported\n\n\nChange working directory to ojdbc7.jar location and run:\n\n\n$JAVA_HOME/jar -uf ojdbc7.jar",
            "title": "OJDBC"
        },
        {
            "location": "/Databases/Oracle/OJDBC/#bug-9632480",
            "text": "OJDBC 12.1.0.2 - BUG: ORA-01000: maximum open cursors exceeded  We need:   ojdbc7.jar  p19632480_121020_Generic.zip  JRE    We need to update OracleDatabaseMetaData.class in our ojdbc7.jar archive   unzip p19632480_121020_Generic.zip  Get folder  ./p19632480_121020_Generic/19632480/files/jdbc/lib/ojdbc7.jar  from archvive and place it to  ojdbc7.jar  file location  Make sure that your JAVA_HOME is exported  Change working directory to ojdbc7.jar location and run:  $JAVA_HOME/jar -uf ojdbc7.jar",
            "title": "BUG: 9632480"
        },
        {
            "location": "/Databases/Oracle/Tablespace/",
            "text": "Create\n\n\nCREATE TABLESPACE tablespace_name DATAFILE 'tablespace_name.ora' SIZE 20M AUTOEXTEND ON;\n### You need this line only for Oracle 12 \nALTER SESSION SET \"_ORACLE_SCRIPT\"=true;\nCREATE USER tablespace_username IDENTIFIED BY tablespace_username_password DEFAULT TABLESPACE tablespace_name;\nGRANT ALL PRIVILEGES TO tablespabe+username ;",
            "title": "Tablespace"
        },
        {
            "location": "/Databases/Oracle/Tablespace/#create",
            "text": "CREATE TABLESPACE tablespace_name DATAFILE 'tablespace_name.ora' SIZE 20M AUTOEXTEND ON;\n### You need this line only for Oracle 12 \nALTER SESSION SET \"_ORACLE_SCRIPT\"=true;\nCREATE USER tablespace_username IDENTIFIED BY tablespace_username_password DEFAULT TABLESPACE tablespace_name;\nGRANT ALL PRIVILEGES TO tablespabe+username ;",
            "title": "Create"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/",
            "text": "View tablespaces by user\n\n\nselect distinct p.tablespace_name from dba_tablespaces p, dba_xml_tables x, dba_users u, all_all_tables t where t.table_name=x.table_name and t.tablespace_name=p.tablespace_name and x.owner=u.username;\n\n\n\n\nView all tablespaces: run by sysdba\n\n\nselect * from dba_tablespaces;\n\n\n\n\nView charset\n\n\nSELECT value$ FROM sys.props$ WHERE name = 'NLS_CHARACTERSET' ;\n\n\n\n\nGet status of instances\n\n\nselect instance_name, status, database_status from v$instance; \nselect status from v$instance;\nselect logins from v$instance;\n\n\n\n\nMount and open DB\n\n\nALTER DATABASE Mount;\nALTER DATABASE OPEN;\n\n\n\n\nBackup via RMAN\n\n\nrun {\nshutdown immediate;\nstartup mount;\nbackup database;\nalter database open;\n}\n\n\n\n\nEnabling archivelog\n\n\nSHUTDOWN;\nSTARTUP MOUNT EXCLUSIVE;\nALTER DATABASE ARCHIVELOG;\nALTER DATABASE OPEN;\nSELECT log_mode FROM v$database;\n\n\n\n\nOpen cursors\n\n\nselect * from v$parameter where name = 'open_cursors';\nselect value from v$parameter where name = 'open_cursors';\nalter system set open_cursors=4000 scope=both;\n\n-- Top list\nselect a.value, s.username, s.sid, s.serial# from v$sesstat a, v$statname b, v$session s where a.statistic# = b.statistic#  and s.sid=a.sid and b.name = 'opened cursors current' and s.username is not null order by value desc;\nselect * from ( select ss.value, sn.name, ss.sid from v$sesstat ss, v$statname sn where ss.statistic# = sn.statistic# and sn.name like '%opened cursors current%' order by value desc) where rownum < 11 ;\n\nselect USERNAME, OSUSER, PROCESS, MACHINE, PROGRAM, EVENT, STATE from v$session where sid in (select SID from ( select ss.value, sn.name, ss.sid from v$sesstat ss, v$statname sn where ss.statistic# = sn.statistic# and sn.name like '%opened cursors current%' order by value desc));\nselect SID,USERNAME, OSUSER, PROCESS, MACHINE, PROGRAM, EVENT, STATE from v$session where sid in (select SID from ( select ss.value, sn.name, ss.sid from v$sesstat ss, v$statname sn where ss.statistic# = sn.statistic# and sn.name like '%opened cursors current%' order by value desc) where rownum < 20);\n\nselect user_name, status, osuser, machine, a.sql_text \n  from v$session b, v$open_cursor a \n  where a.sid = b.sid and MACHINE='SERVER_NAME'; \n\nselect * \n  from v$session b, v$open_cursor a \n  where a.sid = b.sid and MACHINE='SERVER_NAME';\n\nselect a.value, s.username, s.sid, s.serial# from v$sesstat a, v$statname b, v$session s where b.name = 'opened cursors current' order by value desc;",
            "title": "Useful Queries"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#view-tablespaces-by-user",
            "text": "select distinct p.tablespace_name from dba_tablespaces p, dba_xml_tables x, dba_users u, all_all_tables t where t.table_name=x.table_name and t.tablespace_name=p.tablespace_name and x.owner=u.username;",
            "title": "View tablespaces by user"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#view-all-tablespaces-run-by-sysdba",
            "text": "select * from dba_tablespaces;",
            "title": "View all tablespaces: run by sysdba"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#view-charset",
            "text": "SELECT value$ FROM sys.props$ WHERE name = 'NLS_CHARACTERSET' ;",
            "title": "View charset"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#get-status-of-instances",
            "text": "select instance_name, status, database_status from v$instance; \nselect status from v$instance;\nselect logins from v$instance;",
            "title": "Get status of instances"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#mount-and-open-db",
            "text": "ALTER DATABASE Mount;\nALTER DATABASE OPEN;",
            "title": "Mount and open DB"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#backup-via-rman",
            "text": "run {\nshutdown immediate;\nstartup mount;\nbackup database;\nalter database open;\n}",
            "title": "Backup via RMAN"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#enabling-archivelog",
            "text": "SHUTDOWN;\nSTARTUP MOUNT EXCLUSIVE;\nALTER DATABASE ARCHIVELOG;\nALTER DATABASE OPEN;\nSELECT log_mode FROM v$database;",
            "title": "Enabling archivelog"
        },
        {
            "location": "/Databases/Oracle/Useful_Queries/#open-cursors",
            "text": "select * from v$parameter where name = 'open_cursors';\nselect value from v$parameter where name = 'open_cursors';\nalter system set open_cursors=4000 scope=both;\n\n-- Top list\nselect a.value, s.username, s.sid, s.serial# from v$sesstat a, v$statname b, v$session s where a.statistic# = b.statistic#  and s.sid=a.sid and b.name = 'opened cursors current' and s.username is not null order by value desc;\nselect * from ( select ss.value, sn.name, ss.sid from v$sesstat ss, v$statname sn where ss.statistic# = sn.statistic# and sn.name like '%opened cursors current%' order by value desc) where rownum < 11 ;\n\nselect USERNAME, OSUSER, PROCESS, MACHINE, PROGRAM, EVENT, STATE from v$session where sid in (select SID from ( select ss.value, sn.name, ss.sid from v$sesstat ss, v$statname sn where ss.statistic# = sn.statistic# and sn.name like '%opened cursors current%' order by value desc));\nselect SID,USERNAME, OSUSER, PROCESS, MACHINE, PROGRAM, EVENT, STATE from v$session where sid in (select SID from ( select ss.value, sn.name, ss.sid from v$sesstat ss, v$statname sn where ss.statistic# = sn.statistic# and sn.name like '%opened cursors current%' order by value desc) where rownum < 20);\n\nselect user_name, status, osuser, machine, a.sql_text \n  from v$session b, v$open_cursor a \n  where a.sid = b.sid and MACHINE='SERVER_NAME'; \n\nselect * \n  from v$session b, v$open_cursor a \n  where a.sid = b.sid and MACHINE='SERVER_NAME';\n\nselect a.value, s.username, s.sid, s.serial# from v$sesstat a, v$statname b, v$session s where b.name = 'opened cursors current' order by value desc;",
            "title": "Open cursors"
        },
        {
            "location": "/Dev/GCC/Make/",
            "text": "Flags to configure\n\n\n/configure CFLAGS='-std=gnu89 -g -O2 -w' CXXFLAGS='-std=gnu++98 -g -O2 -w'",
            "title": "Make"
        },
        {
            "location": "/Dev/GCC/Make/#flags-to-configure",
            "text": "/configure CFLAGS='-std=gnu89 -g -O2 -w' CXXFLAGS='-std=gnu++98 -g -O2 -w'",
            "title": "Flags to configure"
        },
        {
            "location": "/Dev/Ruby/Installation/",
            "text": "via RVM on Ubuntu\n\n\nsudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev\ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3\ncurl -sSL https://get.rvm.io | bash -s stable\nsource ~/.rvm/scripts/rvm\nrvm install 2.3.1\nrvm use 2.3.1 --default\nruby -v",
            "title": "Installation"
        },
        {
            "location": "/Dev/Ruby/Installation/#via-rvm-on-ubuntu",
            "text": "sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev\ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3\ncurl -sSL https://get.rvm.io | bash -s stable\nsource ~/.rvm/scripts/rvm\nrvm install 2.3.1\nrvm use 2.3.1 --default\nruby -v",
            "title": "via RVM on Ubuntu"
        },
        {
            "location": "/Dev/Version_Control/Git/",
            "text": "Clone\n\n\n# For new repos(-jN - number of simltaniuos jobs):\ngit clone --recursive -j4 https://github.com/keepbot/dotfiles-srv\ngit clone --recursive https://github.com/keepbot/dotfiles-srv\n\n# For already cloned repos:\ngit submodule update --init --recursive\n\n# Ignore self signed ssl certificates\ngit -c http.sslVerify=false clone --recursive https://github.com/keepbot/dotfiles-srv.git\n\n\n\n\nGlobal settings\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email your@e-mail.com\n\n\n\n\nCreate new repository\n\n\nmkdir -p <path_to_repository>\ncd <path_to_repository>\ngit add .\ngit commit -m \"Initialization\"\ngit remote add origin https://github.com/username/<repository>.git\ngit push -u origin master\ngit checkout \n\n\n\n\nCommit\n\n\n# Addition of new files with automatic staging of deleted and modified files\ngit add .\ngit commit -a -m \"new commentary\"\ngit push -u origin master\n\n\n\n\nUpdate local reposytory from remote\n\n\n# Fentch + Merge\ngit pull\n# Fetch only\ngit fetch\n# Fetch changes from remote repository with modified local repository\ngit commit -a -m \"new commentary\"\ngit pull rebase\n# pull remote with overwrite local changes\ngit fetch --all\ngit reset --hard origin/master\n\n\n\n\nWorking with bunch of  repositories\n\n\n# Last commits\nfor d in `ls`; do cd $d; git log --pretty=format:\"%h - %an, %ar : %s\" -1; cd ..; done\n# Mass checkout\nfor d in `ls`; do cd $d; git checkout; cd ..; done\n\n\n\n\nMaking patches from commits:\n\n\n\n\nCreate patch \n\n\n\n\n# The easiest version (you can specify number of commit to patch) \ngit format-patch -1 HEAD\n# Same as first, but create numbered files (00001-nnnnn)\ngit format-patch -n HEAD^\n# Simple cat ftom stdout, works fine on most of systems, but be carfull, if you have customized terminal (color tags, special symbols, etc.)\ngit show HEAD > path_to.patch\n\n\n\n\n\n\nApply patch\n\n\n\n\ngit apply --stat 0001-Linux-agent-LVM-subagent-initial-implementation.patch\ngit apply --check 0001-Linux-agent-LVM-subagent-initial-implementation.patch\ngit am < 0001-Linux-agent-LVM-subagent-initial-implementation.patch",
            "title": "Git"
        },
        {
            "location": "/Dev/Version_Control/Git/#clone",
            "text": "# For new repos(-jN - number of simltaniuos jobs):\ngit clone --recursive -j4 https://github.com/keepbot/dotfiles-srv\ngit clone --recursive https://github.com/keepbot/dotfiles-srv\n\n# For already cloned repos:\ngit submodule update --init --recursive\n\n# Ignore self signed ssl certificates\ngit -c http.sslVerify=false clone --recursive https://github.com/keepbot/dotfiles-srv.git",
            "title": "Clone"
        },
        {
            "location": "/Dev/Version_Control/Git/#global-settings",
            "text": "git config --global user.name \"Your Name\"\ngit config --global user.email your@e-mail.com",
            "title": "Global settings"
        },
        {
            "location": "/Dev/Version_Control/Git/#create-new-repository",
            "text": "mkdir -p <path_to_repository>\ncd <path_to_repository>\ngit add .\ngit commit -m \"Initialization\"\ngit remote add origin https://github.com/username/<repository>.git\ngit push -u origin master\ngit checkout",
            "title": "Create new repository"
        },
        {
            "location": "/Dev/Version_Control/Git/#commit",
            "text": "# Addition of new files with automatic staging of deleted and modified files\ngit add .\ngit commit -a -m \"new commentary\"\ngit push -u origin master",
            "title": "Commit"
        },
        {
            "location": "/Dev/Version_Control/Git/#update-local-reposytory-from-remote",
            "text": "# Fentch + Merge\ngit pull\n# Fetch only\ngit fetch\n# Fetch changes from remote repository with modified local repository\ngit commit -a -m \"new commentary\"\ngit pull rebase\n# pull remote with overwrite local changes\ngit fetch --all\ngit reset --hard origin/master",
            "title": "Update local reposytory from remote"
        },
        {
            "location": "/Dev/Version_Control/Git/#working-with-bunch-of-repositories",
            "text": "# Last commits\nfor d in `ls`; do cd $d; git log --pretty=format:\"%h - %an, %ar : %s\" -1; cd ..; done\n# Mass checkout\nfor d in `ls`; do cd $d; git checkout; cd ..; done",
            "title": "Working with bunch of  repositories"
        },
        {
            "location": "/Dev/Version_Control/Git/#making-patches-from-commits",
            "text": "Create patch    # The easiest version (you can specify number of commit to patch) \ngit format-patch -1 HEAD\n# Same as first, but create numbered files (00001-nnnnn)\ngit format-patch -n HEAD^\n# Simple cat ftom stdout, works fine on most of systems, but be carfull, if you have customized terminal (color tags, special symbols, etc.)\ngit show HEAD > path_to.patch   Apply patch   git apply --stat 0001-Linux-agent-LVM-subagent-initial-implementation.patch\ngit apply --check 0001-Linux-agent-LVM-subagent-initial-implementation.patch\ngit am < 0001-Linux-agent-LVM-subagent-initial-implementation.patch",
            "title": "Making patches from commits:"
        },
        {
            "location": "/Dev/Version_Control/GitHub/",
            "text": "Independent history catalogs of git repositories\n\n\n# Makes a bunch of history folders formatted by the next way: <repository>-<number_of_commit>-<commit_hash>\n# Check commit_list.end for mistakes, you need simple list of commits\ngit clone <repository_url> <repository>\ncd <repository> && git log --pretty=format:\"%h\" > ../commit_list && cd ..\ntac commit_list > commit_list.end \ni=1; for cid in `cat commit_list.end`; do cp -r <repository> <repository>-$i-$cid; cd <repository>-$i-$cid; git checkout $cid; cd ..; ((i=i+1)); done\n\n\n\n\nClone all user's repositories\n\n\n# Get complete list of user's repositories in JSON file\ncurl -s https://api.github.com/users/<username>/repos?per_page=200 > repo.list.json\npython -c \"import json,sys,os;file = open('repo.list.json' ,'r');obj = json.load(file);obj_size = len(obj);cmd = 'git clone  ';[os.system(cmd + obj[x]['clone_url']) for x in range(0, obj_size)];file.close()\"\n# And dont forget about \"space\"(%20, \" \") in cmd = 'git clone ', it's completely nessesary\n# Another way to clone up to 200 user's repos(just in shell): \ncurl -s https://api.github.com/users/keepbot/repos?per_page=200 | jq '.[] | .\"clone_url\"' | xargs -I '{}' git clone {}",
            "title": "GitHub"
        },
        {
            "location": "/Dev/Version_Control/GitHub/#independent-history-catalogs-of-git-repositories",
            "text": "# Makes a bunch of history folders formatted by the next way: <repository>-<number_of_commit>-<commit_hash>\n# Check commit_list.end for mistakes, you need simple list of commits\ngit clone <repository_url> <repository>\ncd <repository> && git log --pretty=format:\"%h\" > ../commit_list && cd ..\ntac commit_list > commit_list.end \ni=1; for cid in `cat commit_list.end`; do cp -r <repository> <repository>-$i-$cid; cd <repository>-$i-$cid; git checkout $cid; cd ..; ((i=i+1)); done",
            "title": "Independent history catalogs of git repositories"
        },
        {
            "location": "/Dev/Version_Control/GitHub/#clone-all-users-repositories",
            "text": "# Get complete list of user's repositories in JSON file\ncurl -s https://api.github.com/users/<username>/repos?per_page=200 > repo.list.json\npython -c \"import json,sys,os;file = open('repo.list.json' ,'r');obj = json.load(file);obj_size = len(obj);cmd = 'git clone  ';[os.system(cmd + obj[x]['clone_url']) for x in range(0, obj_size)];file.close()\"\n# And dont forget about \"space\"(%20, \" \") in cmd = 'git clone ', it's completely nessesary\n# Another way to clone up to 200 user's repos(just in shell): \ncurl -s https://api.github.com/users/keepbot/repos?per_page=200 | jq '.[] | .\"clone_url\"' | xargs -I '{}' git clone {}",
            "title": "Clone all user's repositories"
        },
        {
            "location": "/OS/AIX/",
            "text": "Basic programs\n\n\nsh$ ftp ftp.software.ibm.com\n  Name> ftp\n  Password> your e-mail address\n  ftp> cd aix/freeSoftware/aixtoolbox/RPMS/ppc/wget\n  ftp> binary\n  ftp> get wget-1.9.1-1.aix5.1.ppc.rpm\n  ftp> quit\nsh$ rpm -hUv wget-1.9.1-1.aix5.1.ppc.rpm\nsh$ wget -r -nd ftp://ftp.software.ibm.com/aix/freeSoftware/aixtoolbox/ezinstall/ppc  \n\nsh$ ls\ngetapp-dev.sh       getgnome.base.sh    getkde3.all.sh\nXsession.kde        getbase.sh          getkde2.all.sh      getkde3.base.sh\nXsession.kde2       getdesktop.base.sh  getkde2.base.sh     getkde3.opt.sh\ngetgnome.apps.sh    getkde2.opt.sh      \n\nsh$ chmod +x get*.sh  \n\nsh$ cd base\nsh$ ls\nbash-3.2-1.aix5.2.ppc.rpm          rpm-3.0.5-52.aix5.3.ppc.rpm\nbzip2-1.0.5-3.aix5.3.ppc.rpm       rpm-build-3.0.5-52.aix5.3.ppc.rpm\ngettext-0.10.40-8.aix5.2.ppc.rpm   rpm-devel-3.0.5-52.aix5.3.ppc.rpm\ngzip-1.2.4a-10.aix5.2.ppc.rpm      tar-1.14-2.aix5.1.ppc.rpm\ninfo-4.6-1.aix5.1.ppc.rpm          unzip-5.51-1.aix5.1.ppc.rpm\npatch-2.5.4-4.aix4.3.ppc.rpm       \npopt-1.7-2.aix5.1.ppc.rpm\n\nsh$ rpm -hUv unzip-5.51-1.aix5.1.ppc.rpm\nsh$ rpm -hUv zip-2.3-3.aix4.3.ppc.rpm\nsh$ rpm -hUv bash-3.2-1.aix5.2.ppc.rpm\n\nsh$ bash\nbash-3.2# \n\n\n\n\nManagement\n\n\n# Exit from basic VIOS console to common AIX ksh\noem_setup_env\n# Adminitration and configuration console\nsmit\n\n#If you want to use bash as a login shell, you first have to add it to the\n#list of shells in /etc/security/login.cfg. \n#Then use `chsh` to change your individual setting.\n\n\n\n\nSoftware installation:\n\n\ncd <path_to_package>\ninutoc .\ninstallp -aXY -d<path_to_package> all\n# Check if package is installed or not:\nlslpp -L <package_name>\n\n\n\n\nMirroring rootvg:\n\n\nextendvg rootvg hdisk1\nmirrorvg rootvg\nbootlist -m normal hdisk0 hdisk1 \nbosboot -ad hdisk0\nbosboot -ad hdisk1\n# Checking\nbootlist -o -m normal\n\n\n\n\nNetwork:\n\n\nShared Ethernet adapter coming soon\n\n\n\n\nHardware:\n\n\n# Refresh hardware configuration(aix and vios respectively):\ncfgmgr\ncfgdev\n# Rename hard drive:\nrendev -l <old_name> -n <new_name>\nrendev -l hdisk3 -n hdisk33\n# Enable PVID:\nchdev -l hdiskX -a pv=yes\n# Change reserve policy to hard drive\nchdev -l hdiskX -a reserve_policy=no_reserve\n# Clear the owning volume manager from a disk\nchpv -C hdiskX\n\n\n\n\nVirtual devices:\n\n\n# Checking all virtual mappings to particular vhost:\nlsmap -vadapter vhost\n# Make a virtual hard drive for particular vhost:\n# -f - flag to forcing device creation if you're making shared hard drive\nmkvdev [-f] -vdev hdiskX -vadapter vhostX -dev <virtual_device_name>\n# Make a virtual cd-rom device for particular vhost:\nmkvdev -fbo -vadapter vhostX -dev <virtual_device_name>\n\n\n\n\nZabbix agent\n\n\n# Dependencies:\nrpm -ivh ftp://www.oss4aix.org/latest/aix61/gettext-0.10.40-8.aix5.2.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/expat-2.1.0-1.aix5.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/libgcc-4.7.2-1.aix6.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/libffi-3.0.11-2.aix5.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/glib2-2.30.3-1.aix5.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/libiconv-1.14-2.aix5.1.ppc.rpm\n\n# Main\nmkgroup zabbix\nuseradd -g zabbix zabbix\n\nmkdir /var/run/zabbix\ntouch /var/run/zabbix/zabbix_agentd.pid\nmkdir /var/log/zabbix\ntouch /var/log/zabbix/zabbix_agentd.log\n\nchown -R zabbix:zabbix /var/log/zabbix\nchown -R zabbix:zabbix /var/run/zabbix\nchown zabbix:zabbix /etc/zabbix_agentd.conf\n\n/usr/sbin/zabbix_agentd --config /etc/zabbix_agentd.conf\n\nvi /etc/inittab\nzabagent:2:once:/usr/sbin/zabbix_agentd --config /etc/zabbix_agentd.conf",
            "title": "AIX"
        },
        {
            "location": "/OS/AIX/#basic-programs",
            "text": "sh$ ftp ftp.software.ibm.com\n  Name> ftp\n  Password> your e-mail address\n  ftp> cd aix/freeSoftware/aixtoolbox/RPMS/ppc/wget\n  ftp> binary\n  ftp> get wget-1.9.1-1.aix5.1.ppc.rpm\n  ftp> quit\nsh$ rpm -hUv wget-1.9.1-1.aix5.1.ppc.rpm\nsh$ wget -r -nd ftp://ftp.software.ibm.com/aix/freeSoftware/aixtoolbox/ezinstall/ppc  \n\nsh$ ls\ngetapp-dev.sh       getgnome.base.sh    getkde3.all.sh\nXsession.kde        getbase.sh          getkde2.all.sh      getkde3.base.sh\nXsession.kde2       getdesktop.base.sh  getkde2.base.sh     getkde3.opt.sh\ngetgnome.apps.sh    getkde2.opt.sh      \n\nsh$ chmod +x get*.sh  \n\nsh$ cd base\nsh$ ls\nbash-3.2-1.aix5.2.ppc.rpm          rpm-3.0.5-52.aix5.3.ppc.rpm\nbzip2-1.0.5-3.aix5.3.ppc.rpm       rpm-build-3.0.5-52.aix5.3.ppc.rpm\ngettext-0.10.40-8.aix5.2.ppc.rpm   rpm-devel-3.0.5-52.aix5.3.ppc.rpm\ngzip-1.2.4a-10.aix5.2.ppc.rpm      tar-1.14-2.aix5.1.ppc.rpm\ninfo-4.6-1.aix5.1.ppc.rpm          unzip-5.51-1.aix5.1.ppc.rpm\npatch-2.5.4-4.aix4.3.ppc.rpm       \npopt-1.7-2.aix5.1.ppc.rpm\n\nsh$ rpm -hUv unzip-5.51-1.aix5.1.ppc.rpm\nsh$ rpm -hUv zip-2.3-3.aix4.3.ppc.rpm\nsh$ rpm -hUv bash-3.2-1.aix5.2.ppc.rpm\n\nsh$ bash\nbash-3.2#",
            "title": "Basic programs"
        },
        {
            "location": "/OS/AIX/#management",
            "text": "# Exit from basic VIOS console to common AIX ksh\noem_setup_env\n# Adminitration and configuration console\nsmit\n\n#If you want to use bash as a login shell, you first have to add it to the\n#list of shells in /etc/security/login.cfg. \n#Then use `chsh` to change your individual setting.",
            "title": "Management"
        },
        {
            "location": "/OS/AIX/#software-installation",
            "text": "cd <path_to_package>\ninutoc .\ninstallp -aXY -d<path_to_package> all\n# Check if package is installed or not:\nlslpp -L <package_name>",
            "title": "Software installation:"
        },
        {
            "location": "/OS/AIX/#mirroring-rootvg",
            "text": "extendvg rootvg hdisk1\nmirrorvg rootvg\nbootlist -m normal hdisk0 hdisk1 \nbosboot -ad hdisk0\nbosboot -ad hdisk1\n# Checking\nbootlist -o -m normal",
            "title": "Mirroring rootvg:"
        },
        {
            "location": "/OS/AIX/#network",
            "text": "Shared Ethernet adapter coming soon",
            "title": "Network:"
        },
        {
            "location": "/OS/AIX/#hardware",
            "text": "# Refresh hardware configuration(aix and vios respectively):\ncfgmgr\ncfgdev\n# Rename hard drive:\nrendev -l <old_name> -n <new_name>\nrendev -l hdisk3 -n hdisk33\n# Enable PVID:\nchdev -l hdiskX -a pv=yes\n# Change reserve policy to hard drive\nchdev -l hdiskX -a reserve_policy=no_reserve\n# Clear the owning volume manager from a disk\nchpv -C hdiskX",
            "title": "Hardware:"
        },
        {
            "location": "/OS/AIX/#virtual-devices",
            "text": "# Checking all virtual mappings to particular vhost:\nlsmap -vadapter vhost\n# Make a virtual hard drive for particular vhost:\n# -f - flag to forcing device creation if you're making shared hard drive\nmkvdev [-f] -vdev hdiskX -vadapter vhostX -dev <virtual_device_name>\n# Make a virtual cd-rom device for particular vhost:\nmkvdev -fbo -vadapter vhostX -dev <virtual_device_name>",
            "title": "Virtual devices:"
        },
        {
            "location": "/OS/AIX/#zabbix-agent",
            "text": "# Dependencies:\nrpm -ivh ftp://www.oss4aix.org/latest/aix61/gettext-0.10.40-8.aix5.2.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/expat-2.1.0-1.aix5.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/libgcc-4.7.2-1.aix6.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/libffi-3.0.11-2.aix5.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/glib2-2.30.3-1.aix5.1.ppc.rpm\nrpm -ivh ftp://www.oss4aix.org/compatible/aix61/libiconv-1.14-2.aix5.1.ppc.rpm\n\n# Main\nmkgroup zabbix\nuseradd -g zabbix zabbix\n\nmkdir /var/run/zabbix\ntouch /var/run/zabbix/zabbix_agentd.pid\nmkdir /var/log/zabbix\ntouch /var/log/zabbix/zabbix_agentd.log\n\nchown -R zabbix:zabbix /var/log/zabbix\nchown -R zabbix:zabbix /var/run/zabbix\nchown zabbix:zabbix /etc/zabbix_agentd.conf\n\n/usr/sbin/zabbix_agentd --config /etc/zabbix_agentd.conf\n\nvi /etc/inittab\nzabagent:2:once:/usr/sbin/zabbix_agentd --config /etc/zabbix_agentd.conf",
            "title": "Zabbix agent"
        },
        {
            "location": "/OS/ArchLinux/",
            "text": "Pacman:\n\n\n# Search for software\npacman -Ss <pattern>\n# Install package\npacman -S <package_name>\n# Update the system\npacman -Syu\n# Remove orphaned packages (Be careful, double check for list of deleted packages)\npacman -Rscn $(pacman -Qtdq)\npacman -Sc\npacman-optimize && sync\n\n\n\n\nAUR package installation:\n\n\ngit clone https://aur.archlinux.org/<packiage_name>\ncd <package_name>\nmakepkg -sri\n\n# In case of error like:\n# <package>.tar.gz ... FAILED (unknown public key 0000000000000000)\ngpg --recv-key 0000000000000000",
            "title": "ArchLinux"
        },
        {
            "location": "/OS/ArchLinux/#pacman",
            "text": "# Search for software\npacman -Ss <pattern>\n# Install package\npacman -S <package_name>\n# Update the system\npacman -Syu\n# Remove orphaned packages (Be careful, double check for list of deleted packages)\npacman -Rscn $(pacman -Qtdq)\npacman -Sc\npacman-optimize && sync",
            "title": "Pacman:"
        },
        {
            "location": "/OS/ArchLinux/#aur-package-installation",
            "text": "git clone https://aur.archlinux.org/<packiage_name>\ncd <package_name>\nmakepkg -sri\n\n# In case of error like:\n# <package>.tar.gz ... FAILED (unknown public key 0000000000000000)\ngpg --recv-key 0000000000000000",
            "title": "AUR package installation:"
        },
        {
            "location": "/OS/FreeBSD/",
            "text": "Build own kernel\n\n\n# /usr/src/sys/i386/conf  - kernel config\ncd /usr/src\nmake buildkernel KERNCONF=MYKERNEL\nmake installkernel KERNCONF=MYKERNEL",
            "title": "FreeBSD"
        },
        {
            "location": "/OS/FreeBSD/#build-own-kernel",
            "text": "# /usr/src/sys/i386/conf  - kernel config\ncd /usr/src\nmake buildkernel KERNCONF=MYKERNEL\nmake installkernel KERNCONF=MYKERNEL",
            "title": "Build own kernel"
        },
        {
            "location": "/Security/HSM/",
            "text": "Generate LMK consists of 3 components.\n\n\nStep-By-Step.\n\n\n0:\nConnect to Thales HMS 8000 via common Terminal Client.\n\n1:\nOnline> FC <Return> \nInsert card and press ENTER: <Return> \nCard already formatted, continue? [Y/N]: Y <Return> \nFormat card for HSM settings/LMKs? [H/L]: L <Return> \nErasing card \nFormatting card . . . \nEnter new PIN for Smart Card: 2134 <Return>\nRe-enter new PIN: 2134 <Return> \nEnter time [hhmmss]: 173000 <Return>  - current time\nEnter date [ddmmyy]: 081111 <Return> \nEnter User ID: User1 <Return> \nEnter Issuer ID: ITS <Return> \nFormat complete \n\n2:\nOnline> FC <Return> \nInsert card and press ENTER: <Return> \nCard already formatted, continue? [Y/N]: Y <Return> \nFormat card for HSM settings/LMKs? [H/L]: L <Return> \nErasing card \nFormatting card . . . \nEnter new PIN for Smart Card: 4356 <Return>\nRe-enter new PIN: 4356 <Return> \nEnter time [hhmmss]: 173000 <Return> \nEnter date [ddmmyy]: 081111 <Return> \nEnter User ID: User2 <Return> \nEnter Issuer ID: ITS <Return> \nFormat complete \n\n3:\nOnline> FC <Return> \nInsert card and press ENTER: <Return> \nCard already formatted, continue? [Y/N]: Y <Return> \nFormat card for HSM settings/LMKs? [H/L]: L <Return> \nErasing card \nFormatting card . . . \nEnter new PIN for Smart Card: 5467 <Return>\nRe-enter new PIN: 5467 <Return> \nEnter time [hhmmss]: 173000 <Return> \nEnter date [ddmmyy]: 081111 <Return> \nEnter User ID: User3 <Return> \nEnter Issuer ID: ITS <Return> \nFormat complete \n\n4:\nTaking HSM into the Secure State\n\n5:\nSecure> GK <Return> \nLMKs must be erased before proceeding. \nErase LMKs? Y <Return> \nLMK component set [1-9]: 1 <Return> \nEnter secret value A: <Return> \nEnter secret value B: <Return> \nEnter value C: <Return> \nInsert blank card and enter PIN: 2134 <Return> \nWriting keys \nChecking keys \nDevice write complete, check: XXXX XXXX XXXX XXXX \nRemove the smartcard and store it securely. \nMake another copy? [Y/N]: N <Return> X copies made. \n\n6:\nSecure> GK <Return> \nLMKs must be erased before proceeding. \nErase LMKs? Y <Return> \nLMK component set [1-9]: 2 <Return> \nEnter secret value A: <Return> \nEnter secret value B: <Return> \nEnter value C: <Return> \nInsert blank card and enter PIN: 4356 <Return> \nWriting keys \nChecking keys \nDevice write complete, check: XXXX XXXX XXXX XXXX \nRemove the smartcard and store it securely. \nMake another copy? [Y/N]: N <Return> X copies made. \n\n7:\nSecure> GK <Return> \nLMKs must be erased before proceeding. \nErase LMKs? Y <Return> \nLMK component set [1-9]: 3 <Return> \nEnter secret value A: <Return> \nEnter secret value B: <Return> \nEnter value C: <Return> \nInsert blank card and enter PIN: 5467 <Return> \nWriting keys \nChecking keys \nDevice write complete, check: XXXX XXXX XXXX XXXX \nRemove the smartcard and store it securely. \nMake another copy? [Y/N]: N <Return> X copies made. \n\n8-9-10:Secure> LK <Return>\nLMKs must be erased before proceeding.\nErase LMKs? Y <Return>\nLoad LMK from components. Insert card and enter PIN: **** <Return>\nCHECK: XXXX XXXX XXXX XXXX Load more components? [Y/N]: Y <Return>\nRemove the smartcard. Insert the second and subsequent Smartcards and repeat the loading procedure. When all have been loaded and the HSM displays the check value, record the check value.\nCHECK: XXXX XXXX XXXX XXXX Load more components? [Y/N]: N <Return>\nUse the LO command to load LMKs into key change storage.\nSecure>\nUse the A command to put the HSM into the Authorised State in order to check the LMK components and passwords or PINs.\n\n11:\nReturn to online state: remove secure keys and press reset button at least 2 seconds.",
            "title": "HSM"
        },
        {
            "location": "/Security/HSM/#generate-lmk-consists-of-3-components",
            "text": "Step-By-Step.  0:\nConnect to Thales HMS 8000 via common Terminal Client.\n\n1:\nOnline> FC <Return> \nInsert card and press ENTER: <Return> \nCard already formatted, continue? [Y/N]: Y <Return> \nFormat card for HSM settings/LMKs? [H/L]: L <Return> \nErasing card \nFormatting card . . . \nEnter new PIN for Smart Card: 2134 <Return>\nRe-enter new PIN: 2134 <Return> \nEnter time [hhmmss]: 173000 <Return>  - current time\nEnter date [ddmmyy]: 081111 <Return> \nEnter User ID: User1 <Return> \nEnter Issuer ID: ITS <Return> \nFormat complete \n\n2:\nOnline> FC <Return> \nInsert card and press ENTER: <Return> \nCard already formatted, continue? [Y/N]: Y <Return> \nFormat card for HSM settings/LMKs? [H/L]: L <Return> \nErasing card \nFormatting card . . . \nEnter new PIN for Smart Card: 4356 <Return>\nRe-enter new PIN: 4356 <Return> \nEnter time [hhmmss]: 173000 <Return> \nEnter date [ddmmyy]: 081111 <Return> \nEnter User ID: User2 <Return> \nEnter Issuer ID: ITS <Return> \nFormat complete \n\n3:\nOnline> FC <Return> \nInsert card and press ENTER: <Return> \nCard already formatted, continue? [Y/N]: Y <Return> \nFormat card for HSM settings/LMKs? [H/L]: L <Return> \nErasing card \nFormatting card . . . \nEnter new PIN for Smart Card: 5467 <Return>\nRe-enter new PIN: 5467 <Return> \nEnter time [hhmmss]: 173000 <Return> \nEnter date [ddmmyy]: 081111 <Return> \nEnter User ID: User3 <Return> \nEnter Issuer ID: ITS <Return> \nFormat complete \n\n4:\nTaking HSM into the Secure State\n\n5:\nSecure> GK <Return> \nLMKs must be erased before proceeding. \nErase LMKs? Y <Return> \nLMK component set [1-9]: 1 <Return> \nEnter secret value A: <Return> \nEnter secret value B: <Return> \nEnter value C: <Return> \nInsert blank card and enter PIN: 2134 <Return> \nWriting keys \nChecking keys \nDevice write complete, check: XXXX XXXX XXXX XXXX \nRemove the smartcard and store it securely. \nMake another copy? [Y/N]: N <Return> X copies made. \n\n6:\nSecure> GK <Return> \nLMKs must be erased before proceeding. \nErase LMKs? Y <Return> \nLMK component set [1-9]: 2 <Return> \nEnter secret value A: <Return> \nEnter secret value B: <Return> \nEnter value C: <Return> \nInsert blank card and enter PIN: 4356 <Return> \nWriting keys \nChecking keys \nDevice write complete, check: XXXX XXXX XXXX XXXX \nRemove the smartcard and store it securely. \nMake another copy? [Y/N]: N <Return> X copies made. \n\n7:\nSecure> GK <Return> \nLMKs must be erased before proceeding. \nErase LMKs? Y <Return> \nLMK component set [1-9]: 3 <Return> \nEnter secret value A: <Return> \nEnter secret value B: <Return> \nEnter value C: <Return> \nInsert blank card and enter PIN: 5467 <Return> \nWriting keys \nChecking keys \nDevice write complete, check: XXXX XXXX XXXX XXXX \nRemove the smartcard and store it securely. \nMake another copy? [Y/N]: N <Return> X copies made. \n\n8-9-10:Secure> LK <Return>\nLMKs must be erased before proceeding.\nErase LMKs? Y <Return>\nLoad LMK from components. Insert card and enter PIN: **** <Return>\nCHECK: XXXX XXXX XXXX XXXX Load more components? [Y/N]: Y <Return>\nRemove the smartcard. Insert the second and subsequent Smartcards and repeat the loading procedure. When all have been loaded and the HSM displays the check value, record the check value.\nCHECK: XXXX XXXX XXXX XXXX Load more components? [Y/N]: N <Return>\nUse the LO command to load LMKs into key change storage.\nSecure>\nUse the A command to put the HSM into the Authorised State in order to check the LMK components and passwords or PINs.\n\n11:\nReturn to online state: remove secure keys and press reset button at least 2 seconds.",
            "title": "Generate LMK consists of 3 components."
        },
        {
            "location": "/Security/IPTables/",
            "text": "Show rules\n\n\niptables -nvL\niptable -t nat -nvL",
            "title": "IPTables"
        },
        {
            "location": "/Security/IPTables/#show-rules",
            "text": "iptables -nvL\niptable -t nat -nvL",
            "title": "Show rules"
        },
        {
            "location": "/Security/SELinux/",
            "text": "Disabling SELinux\n\n\n```bash\nsed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux && cat /etc/sysconfig/selinux",
            "title": "SELinux"
        },
        {
            "location": "/Security/SELinux/#disabling-selinux",
            "text": "```bash\nsed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux && cat /etc/sysconfig/selinux",
            "title": "Disabling SELinux"
        },
        {
            "location": "/Unix/Audit/",
            "text": "Why is my server rebooted?\n\n\nlast reboot \nsudo lastcomm | egrep 'reboot|shutdown'\nwho -b\nsa\ncrontab -e\nless /var/log/secure\nlast -x | less\nlast -x | grep shutdown | less\nless /var/log/messages\njournalctl\nutmpdump /var/log/wtmp | egrep 'shutdown|reboot|runlevel'\njournalctl --since=\"2016-6-28 12:00:00\"\n\n\n\n\nFork: Resource temporarily unavailable on AIX\n\n\nTo investigate the promles you need to run thei bunch of commands:\n\n\ncat /etc/passwd\n\n\n\n\nFrom root you need to look at limint of every active user:\n\n\nulimit -a\nsu oracle -c \"ulimit -a\"\nsu mongod -c \"ulimit -a\"\nsu userX -c \"ulimit -a\"\n\n\n\n\nLook at system wide defined limits:\n\n\ncat /etc/security/limits\n\n\n\n\nLook at kernel parameters, especially on \nmaxuproc\n\n\nlsattr -El sys0\n\n\n\n\nLook at count of running processes by user:\n\n\nps -f -l -uroot | wc -l\nps -f -l -uoracle | wc -l\nps -f -l -umongod | wc -l\nps -f -l -uuserX | wc -l\n\n\n\n\nAnd after all look at avaible mamory and swap:\n\n\nsvmon -G -O unit=MB",
            "title": "Audit"
        },
        {
            "location": "/Unix/Audit/#why-is-my-server-rebooted",
            "text": "last reboot \nsudo lastcomm | egrep 'reboot|shutdown'\nwho -b\nsa\ncrontab -e\nless /var/log/secure\nlast -x | less\nlast -x | grep shutdown | less\nless /var/log/messages\njournalctl\nutmpdump /var/log/wtmp | egrep 'shutdown|reboot|runlevel'\njournalctl --since=\"2016-6-28 12:00:00\"",
            "title": "Why is my server rebooted?"
        },
        {
            "location": "/Unix/Audit/#fork-resource-temporarily-unavailable-on-aix",
            "text": "To investigate the promles you need to run thei bunch of commands:  cat /etc/passwd  From root you need to look at limint of every active user:  ulimit -a\nsu oracle -c \"ulimit -a\"\nsu mongod -c \"ulimit -a\"\nsu userX -c \"ulimit -a\"  Look at system wide defined limits:  cat /etc/security/limits  Look at kernel parameters, especially on  maxuproc  lsattr -El sys0  Look at count of running processes by user:  ps -f -l -uroot | wc -l\nps -f -l -uoracle | wc -l\nps -f -l -umongod | wc -l\nps -f -l -uuserX | wc -l  And after all look at avaible mamory and swap:  svmon -G -O unit=MB",
            "title": "Fork: Resource temporarily unavailable on AIX"
        },
        {
            "location": "/Unix/Commands/",
            "text": "Package management:\n\n\n\n\nApt:\n\n\n\n\n# Show installed packages\napt --installed list\n# Search for software\napt-cache search <pattern>\n# Install package\napt-get install <package_name>\n\n\n\n\n\n\nDpkg: \n\n\n\n\n# To get a list of packages installed locally do this in your terminal:\ndpkg --get-selections | grep -v deinstall\n# To get a list of a specific package installed:\ndpkg --get-selections | grep postgres\n# To save that list to a text file called packages on your desktop do this in your terminal:\ndpkg --get-selections | grep -v deinstall > ~/Desktop/packages\n# Alternatively, simply use\ndpkg -l\n\n\n\n\n\n\nYum:\n\n\n\n\n# Search for software\nyum search <pattern>\n# Install package\nyum install <package_name>\n# Repair \"Error: database disk image is malformed\"\nyum clean dbcache\n\n\n\n\nRemote management:\n\n\n\n\nXfreeRDP\n\n\n\n\nxfreerdp [+clipboard]/w:<WIDTH> /h:<HEIGHT> /drive:<cuatom_drive_name>,<path_to_attach> /v:<ip>:<port> /u:<user_name>\nxfreerdp +clipboard /w:1600 /h:900 /v:10.15.0.10:3389 /u:Administrator\nxfreerdp +clipboard /w:1800 /h:1000 /u:Adminitatrator /drive:hmc,/home/4T/IT/IBM/HMC/7.9_sp3 /v:10.15.0.10\n\n\n\n\nX Server:\n\n\n\n\nStart full-screen application in different X server\n\n\n\n\n/usr/bin/xinit <path_to_fullscreen_application> -- :1\n\n\n\n\n\n\nExport X display to current ssh connection\n\n\n\n\nexport DISPLAY=\"${SSH_CLIENT%% *}\"\n\n\n\n\nMiscellaneous:\n\n\n\n\nTMUX\n\n\n\n\ntmux list-sessions\ntmux attach -t 2\nsudo tmux -2 -S /tmp/tmux-<UID>/default\n\n\n\n\n\n\nCool weather\n\n\n\n\ncurl http://wttr.in/moscow\n\n\n\n\n\n\nSNMP\n\n\n\n\nsnmpwalk -mALL -v2c -ctkM0nit0ring 10.20.30.3 interfaces.ifTable.ifEntry.ifOperStatus",
            "title": "Commands"
        },
        {
            "location": "/Unix/Commands/#package-management",
            "text": "Apt:   # Show installed packages\napt --installed list\n# Search for software\napt-cache search <pattern>\n# Install package\napt-get install <package_name>   Dpkg:    # To get a list of packages installed locally do this in your terminal:\ndpkg --get-selections | grep -v deinstall\n# To get a list of a specific package installed:\ndpkg --get-selections | grep postgres\n# To save that list to a text file called packages on your desktop do this in your terminal:\ndpkg --get-selections | grep -v deinstall > ~/Desktop/packages\n# Alternatively, simply use\ndpkg -l   Yum:   # Search for software\nyum search <pattern>\n# Install package\nyum install <package_name>\n# Repair \"Error: database disk image is malformed\"\nyum clean dbcache",
            "title": "Package management:"
        },
        {
            "location": "/Unix/Commands/#remote-management",
            "text": "XfreeRDP   xfreerdp [+clipboard]/w:<WIDTH> /h:<HEIGHT> /drive:<cuatom_drive_name>,<path_to_attach> /v:<ip>:<port> /u:<user_name>\nxfreerdp +clipboard /w:1600 /h:900 /v:10.15.0.10:3389 /u:Administrator\nxfreerdp +clipboard /w:1800 /h:1000 /u:Adminitatrator /drive:hmc,/home/4T/IT/IBM/HMC/7.9_sp3 /v:10.15.0.10",
            "title": "Remote management:"
        },
        {
            "location": "/Unix/Commands/#x-server",
            "text": "Start full-screen application in different X server   /usr/bin/xinit <path_to_fullscreen_application> -- :1   Export X display to current ssh connection   export DISPLAY=\"${SSH_CLIENT%% *}\"",
            "title": "X Server:"
        },
        {
            "location": "/Unix/Commands/#miscellaneous",
            "text": "TMUX   tmux list-sessions\ntmux attach -t 2\nsudo tmux -2 -S /tmp/tmux-<UID>/default   Cool weather   curl http://wttr.in/moscow   SNMP   snmpwalk -mALL -v2c -ctkM0nit0ring 10.20.30.3 interfaces.ifTable.ifEntry.ifOperStatus",
            "title": "Miscellaneous:"
        },
        {
            "location": "/Unix/Docker/",
            "text": "Run docker conainer\n\n\nsudo docker run --name mysql-nx -e MYSQL_ROOT_PASSWORD=JuSCY1Bq -d -p 127.0.0.1:3306:3306 mysql:latest\n\n\n\n\nExecute in-docker console\n\n\nsudo docker exec -it <container> bash\n\n\n\n\nCreate JSON with container settings\n\n\ndocker inspect -f '{{ json .NetworkSettings }}' <container_id> | python -mjson.tool\n\n\n\n\nDelete containers by date:\n\n\ndocker ps -a | grep 'weeks ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm\n\n\n\n\nDelete all containers:\n\n\ndocker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n\n\n\n\nUse Docker registry\n\n\nmkdir /etc/systemd/system/docker.service.d/\ntouch /etc/systemd/system/docker.service.d/docker_opts.conf\nnano /etc/systemd/system/docker.service.d/docker_opts.conf\n\n# ---\n[Service]\nExecStart=\nExecStart=/usr/bin/docker -d -H fd:// --insecure-registry docker-registry.keepbot.github.io --registry-mirror https://doker-registry-mirror.keepbot.github.io\n# ---\n\nsystemctl daemon-reload\nservice docker restart",
            "title": "Docker"
        },
        {
            "location": "/Unix/Docker/#run-docker-conainer",
            "text": "sudo docker run --name mysql-nx -e MYSQL_ROOT_PASSWORD=JuSCY1Bq -d -p 127.0.0.1:3306:3306 mysql:latest",
            "title": "Run docker conainer"
        },
        {
            "location": "/Unix/Docker/#execute-in-docker-console",
            "text": "sudo docker exec -it <container> bash",
            "title": "Execute in-docker console"
        },
        {
            "location": "/Unix/Docker/#create-json-with-container-settings",
            "text": "docker inspect -f '{{ json .NetworkSettings }}' <container_id> | python -mjson.tool",
            "title": "Create JSON with container settings"
        },
        {
            "location": "/Unix/Docker/#delete-containers-by-date",
            "text": "docker ps -a | grep 'weeks ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm",
            "title": "Delete containers by date:"
        },
        {
            "location": "/Unix/Docker/#delete-all-containers",
            "text": "docker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)",
            "title": "Delete all containers:"
        },
        {
            "location": "/Unix/Docker/#use-docker-registry",
            "text": "mkdir /etc/systemd/system/docker.service.d/\ntouch /etc/systemd/system/docker.service.d/docker_opts.conf\nnano /etc/systemd/system/docker.service.d/docker_opts.conf\n\n# ---\n[Service]\nExecStart=\nExecStart=/usr/bin/docker -d -H fd:// --insecure-registry docker-registry.keepbot.github.io --registry-mirror https://doker-registry-mirror.keepbot.github.io\n# ---\n\nsystemctl daemon-reload\nservice docker restart",
            "title": "Use Docker registry"
        },
        {
            "location": "/Unix/Filesystem/",
            "text": "Change permisions recursively\n\n\nYou can use a simple \nScript\n\n\nfind <path_to_folder> -type f -print -exec chmod 644 {} \\;\nfind <path_to_folder> -type d -print -exec chmod 755 {} \\;\n\n\n\n\nCount files\n\n\nfind . -type f | wc -l\nls | wc -l\n\n\n\n\nRemove file list\n\n\nls | xargs rm\n\n\n\n\nRemove file suffix \"filename\"+\"suffix\"\n\n\nfor i in `find . -type f -name \"*<suffix>*\"`; do dst=`echo $i | sed s/<suffix>//`;mv $i $dst; done\n\n\n\n\nMove all files in one level directory in certain folder to another\n\n\nfind /<path_to_folder>/* -prune -type f | xargs -I '{}' mv {} /<path_to_destination_folder>/archive/.\n\n\n\n\nSearch for certain file contents\n\n\nfind . -type f -name \"*conf\" -exec echo {} \\; -exec grep 192.168.0.1:3389 {} \\;\n\n\n\n\nShow directories content recursively\n\n\nls -R /path | awk '\n/:$/&&f{s=$0;f=0}\n/:$/&&!f{sub(/:$/,\"\");s=$0;f=1;next}\nNF&&f{ print s\"/\"$0 }'\n\n\n\n\nMake dirs with indexes\n\n\nfor i in 0{1..9} {10..39}; do mkdir delete-$i; cd delete-$i; touch del-file-$i; cd ..; done\n\n\n\n\nCreate bunch of files from list in a file:\n\n\n# Predefined number of records\nhead -<number_of_lines> inventory | awk '{ print $1 }' | xargs -I '{}' <destination_folder>/{}\n#E.g. head -10 inventory | awk '{ print $1 }' | xargs -I '{}' touch host_vars/{}\n\n# Whole list from file\ncat <filename> | awk '{ print $1 }' | xargs -I '{}' <destination_folder>/{}\n#E.g. cat inventory | awk '{ print $1 }' | xargs -I '{}' host_vars/{}\n\n\n\n\nMove bunch of folders:\n\n\nls -1d <space separeated folder list> | xargs -I '{}' mv {} <destination>\n#E.g. ls -1d command_line dotfiles-srv programmming-examples shell_scripts | xargs -I '{}' mv {} github/\n\n\n\n\nMounts\n\n\n#Show information about mounted file systems with 'column' examples**\ndf -h | column -t\nmount -l | column -t\n\n\n\n\nSum of root folders\n\n\ndu -s * 2>/dev/null | awk '{print $1}' | paste -sd+ | bc",
            "title": "Filesystem"
        },
        {
            "location": "/Unix/Filesystem/#change-permisions-recursively",
            "text": "You can use a simple  Script  find <path_to_folder> -type f -print -exec chmod 644 {} \\;\nfind <path_to_folder> -type d -print -exec chmod 755 {} \\;",
            "title": "Change permisions recursively"
        },
        {
            "location": "/Unix/Filesystem/#count-files",
            "text": "find . -type f | wc -l\nls | wc -l",
            "title": "Count files"
        },
        {
            "location": "/Unix/Filesystem/#remove-file-list",
            "text": "ls | xargs rm",
            "title": "Remove file list"
        },
        {
            "location": "/Unix/Filesystem/#remove-file-suffix-filenamesuffix",
            "text": "for i in `find . -type f -name \"*<suffix>*\"`; do dst=`echo $i | sed s/<suffix>//`;mv $i $dst; done",
            "title": "Remove file suffix \"filename\"+\"suffix\""
        },
        {
            "location": "/Unix/Filesystem/#move-all-files-in-one-level-directory-in-certain-folder-to-another",
            "text": "find /<path_to_folder>/* -prune -type f | xargs -I '{}' mv {} /<path_to_destination_folder>/archive/.",
            "title": "Move all files in one level directory in certain folder to another"
        },
        {
            "location": "/Unix/Filesystem/#search-for-certain-file-contents",
            "text": "find . -type f -name \"*conf\" -exec echo {} \\; -exec grep 192.168.0.1:3389 {} \\;",
            "title": "Search for certain file contents"
        },
        {
            "location": "/Unix/Filesystem/#show-directories-content-recursively",
            "text": "ls -R /path | awk '\n/:$/&&f{s=$0;f=0}\n/:$/&&!f{sub(/:$/,\"\");s=$0;f=1;next}\nNF&&f{ print s\"/\"$0 }'",
            "title": "Show directories content recursively"
        },
        {
            "location": "/Unix/Filesystem/#make-dirs-with-indexes",
            "text": "for i in 0{1..9} {10..39}; do mkdir delete-$i; cd delete-$i; touch del-file-$i; cd ..; done",
            "title": "Make dirs with indexes"
        },
        {
            "location": "/Unix/Filesystem/#create-bunch-of-files-from-list-in-a-file",
            "text": "# Predefined number of records\nhead -<number_of_lines> inventory | awk '{ print $1 }' | xargs -I '{}' <destination_folder>/{}\n#E.g. head -10 inventory | awk '{ print $1 }' | xargs -I '{}' touch host_vars/{}\n\n# Whole list from file\ncat <filename> | awk '{ print $1 }' | xargs -I '{}' <destination_folder>/{}\n#E.g. cat inventory | awk '{ print $1 }' | xargs -I '{}' host_vars/{}",
            "title": "Create bunch of files from list in a file:"
        },
        {
            "location": "/Unix/Filesystem/#move-bunch-of-folders",
            "text": "ls -1d <space separeated folder list> | xargs -I '{}' mv {} <destination>\n#E.g. ls -1d command_line dotfiles-srv programmming-examples shell_scripts | xargs -I '{}' mv {} github/",
            "title": "Move bunch of folders:"
        },
        {
            "location": "/Unix/Filesystem/#mounts",
            "text": "#Show information about mounted file systems with 'column' examples**\ndf -h | column -t\nmount -l | column -t",
            "title": "Mounts"
        },
        {
            "location": "/Unix/Filesystem/#sum-of-root-folders",
            "text": "du -s * 2>/dev/null | awk '{print $1}' | paste -sd+ | bc",
            "title": "Sum of root folders"
        },
        {
            "location": "/Unix/GPFS/",
            "text": "Instalaltion on AIX:\n\n\n# on each node:\ncd /<path_to_gpfs_base_package>/base-3-5/\ninutoc .\ninstallp -aXY -d/<path_to_gpfs_base_package>/base-3-5 all\ncd /<path_to_gpfs_fix_package>/fix-3-5-10/\ninutoc .\ninstallp -aXY -d/<path_to_gpfs_fix_package>/fix-3-5-10 all\nlslpp -L gpfs.\\*\n\n\n\n\nCreating cluster:\n\n\n# You need to setup paswordless shh connection between nodes\n# Add this path to /etc/environment on each node\nexport PATH=$PATH:/usr/lpp/mmfs/bin\n\nmmcrcluster -N <PRIMARY_NODE_HOSTNAME>:manager-quorum -p PRIMARY_NODE_HOSTNAME -r /usr/bin/ssh -R /usr/bin/scp\nmmchlicense server --accept -N PRIMARY_NODE_HOSTNAME\nmmstartup -a\nmmaddnode -N <SECONDARY_NODE_HOSTNAME>\nmmaddnode -N <THIRDARY_NODE_HOSTNAME>\nmmaddnode -N <N-ARY_NODE_HOSTNAME>\nmmchcluster -s <SECONDARY_NODE_HOSTNAME>\nmmchlicense server --accept -N <SECONDARY_NODE_HOSTNAME>\nmmchlicense server --accept -N <THIRDARY_NODE_HOSTNAME>\nmmchlicense server --accept -N <N-ARY_NODE_HOSTNAME>\nmmstartup -N <SECONDARY_NODE_HOSTNAME>\nmmstartup -N <THIRDARY_NODE_HOSTNAME>\nmmstartup -N <N-ARY_NODE_HOSTNAME>\nmmchnode --quorum --manager -N <SECONDARY_NODE_HOSTNAME>\n# To check status of cluster:\nmmlscluster\nmmgetstate -a\n\n\n\n\nCreate GPFS mirror partition:\n\n\n# On primary node:\nmkdir /etc/gpfs\nvi /etc/gpfs/diskdesk.txt\n### --insert in diskdesk.txt--\nhdiskX:::dataAndMetadata:1:nsd1:\nhdiskY:::dataAndMetadata:2:nsd2:\n### --end of insert--\n\nmmcrnsd -F /etc/gpfs/diskdesk.txt\nmmshutdown -a\nmmchconfig tiebreakerdisks=\"nsd1;nsd2\"\nmmstartup -a\nmmcrfs /mnt/gpfs gpfsfs -F /etc/gpfs/diskdesk.txt -A yes -B 512K -M2 -m2 -R2 -r2 -n 2 -N 50000\nmmlsconfig\nmmmount all -a\nmmchconfig minQuorumNodes=2\ndf -g\n\n\n\n\nAutostart GPFS\n\n\nmmchconfig autoload=yes\n\n\n\n\nIncrease Inodes\n\n\nmmchfs <fsname> -F 1M\n\n\n\n\nChange hostname on GPFS nodes\n\n\n\n\n[Preface]\n\n\n\n\n#Old names:\n10.10.10.10     OLD-SRV-NAME-01\n10.10.10.10     OLD-SRV-NAME-02\n#New names:\n10.10.10.10     NEW-SRV-NAME-01\n10.10.10.10     NEW-SRV-NAME-02\n\n\n\n\n\n\n\n[Preface]\n Stop all services which use GPFS\n\n\n[On each node]\n add new names to /etc/hosts (old ones keep too)\n\n\n\n\n10.10.10.10     NEW-SRV-NAME-01\n10.10.10.11     NEW-SRV-NAME-02\n\n\n\n\n\n\n[On master node]\n Shut down GPFS-cluster\n\n\n\n\nmmshutdown -a\n\n\n\n\n\n\n[On master node]\n Run command for configuration changing\n\n\n\n\n# Change interface names to names placed after \"-N\" key\nmmchnode --admin-interface=OLD-SRV-NAME-01 --daemon-interface=prodctx1 -N NEW-SRV-NAME-01\nmmchnode --admin-interface=OLD-SRV-NAME-01 --daemon-interface=prodctx2 -N NEW-SRV-NAME-02\n\n\n\n\n\n\n[On master node]\n Start GPFS-cluster\n\n\n\n\nmmstartup -a\n\n\n\n\n\n\n[On master node]\n Check cluster details and make sure that names were changed\n\n\n\n\nmmlscluster\nmmgetstate -a\n\n\n\n\n\n\n[On each node]\n If everything right remove old records from /etc/hosts\n\n\n[On maser node]\n Recheck than everything still OK\n\n\n\n\nmmshutdown -a\nmmstartup -a\nmmlscluster\nmmgetstate -a",
            "title": "GPFS"
        },
        {
            "location": "/Unix/GPFS/#instalaltion-on-aix",
            "text": "# on each node:\ncd /<path_to_gpfs_base_package>/base-3-5/\ninutoc .\ninstallp -aXY -d/<path_to_gpfs_base_package>/base-3-5 all\ncd /<path_to_gpfs_fix_package>/fix-3-5-10/\ninutoc .\ninstallp -aXY -d/<path_to_gpfs_fix_package>/fix-3-5-10 all\nlslpp -L gpfs.\\*",
            "title": "Instalaltion on AIX:"
        },
        {
            "location": "/Unix/GPFS/#creating-cluster",
            "text": "# You need to setup paswordless shh connection between nodes\n# Add this path to /etc/environment on each node\nexport PATH=$PATH:/usr/lpp/mmfs/bin\n\nmmcrcluster -N <PRIMARY_NODE_HOSTNAME>:manager-quorum -p PRIMARY_NODE_HOSTNAME -r /usr/bin/ssh -R /usr/bin/scp\nmmchlicense server --accept -N PRIMARY_NODE_HOSTNAME\nmmstartup -a\nmmaddnode -N <SECONDARY_NODE_HOSTNAME>\nmmaddnode -N <THIRDARY_NODE_HOSTNAME>\nmmaddnode -N <N-ARY_NODE_HOSTNAME>\nmmchcluster -s <SECONDARY_NODE_HOSTNAME>\nmmchlicense server --accept -N <SECONDARY_NODE_HOSTNAME>\nmmchlicense server --accept -N <THIRDARY_NODE_HOSTNAME>\nmmchlicense server --accept -N <N-ARY_NODE_HOSTNAME>\nmmstartup -N <SECONDARY_NODE_HOSTNAME>\nmmstartup -N <THIRDARY_NODE_HOSTNAME>\nmmstartup -N <N-ARY_NODE_HOSTNAME>\nmmchnode --quorum --manager -N <SECONDARY_NODE_HOSTNAME>\n# To check status of cluster:\nmmlscluster\nmmgetstate -a",
            "title": "Creating cluster:"
        },
        {
            "location": "/Unix/GPFS/#create-gpfs-mirror-partition",
            "text": "# On primary node:\nmkdir /etc/gpfs\nvi /etc/gpfs/diskdesk.txt\n### --insert in diskdesk.txt--\nhdiskX:::dataAndMetadata:1:nsd1:\nhdiskY:::dataAndMetadata:2:nsd2:\n### --end of insert--\n\nmmcrnsd -F /etc/gpfs/diskdesk.txt\nmmshutdown -a\nmmchconfig tiebreakerdisks=\"nsd1;nsd2\"\nmmstartup -a\nmmcrfs /mnt/gpfs gpfsfs -F /etc/gpfs/diskdesk.txt -A yes -B 512K -M2 -m2 -R2 -r2 -n 2 -N 50000\nmmlsconfig\nmmmount all -a\nmmchconfig minQuorumNodes=2\ndf -g",
            "title": "Create GPFS mirror partition:"
        },
        {
            "location": "/Unix/GPFS/#autostart-gpfs",
            "text": "mmchconfig autoload=yes",
            "title": "Autostart GPFS"
        },
        {
            "location": "/Unix/GPFS/#increase-inodes",
            "text": "mmchfs <fsname> -F 1M",
            "title": "Increase Inodes"
        },
        {
            "location": "/Unix/GPFS/#change-hostname-on-gpfs-nodes",
            "text": "[Preface]   #Old names:\n10.10.10.10     OLD-SRV-NAME-01\n10.10.10.10     OLD-SRV-NAME-02\n#New names:\n10.10.10.10     NEW-SRV-NAME-01\n10.10.10.10     NEW-SRV-NAME-02   [Preface]  Stop all services which use GPFS  [On each node]  add new names to /etc/hosts (old ones keep too)   10.10.10.10     NEW-SRV-NAME-01\n10.10.10.11     NEW-SRV-NAME-02   [On master node]  Shut down GPFS-cluster   mmshutdown -a   [On master node]  Run command for configuration changing   # Change interface names to names placed after \"-N\" key\nmmchnode --admin-interface=OLD-SRV-NAME-01 --daemon-interface=prodctx1 -N NEW-SRV-NAME-01\nmmchnode --admin-interface=OLD-SRV-NAME-01 --daemon-interface=prodctx2 -N NEW-SRV-NAME-02   [On master node]  Start GPFS-cluster   mmstartup -a   [On master node]  Check cluster details and make sure that names were changed   mmlscluster\nmmgetstate -a   [On each node]  If everything right remove old records from /etc/hosts  [On maser node]  Recheck than everything still OK   mmshutdown -a\nmmstartup -a\nmmlscluster\nmmgetstate -a",
            "title": "Change hostname on GPFS nodes"
        },
        {
            "location": "/Unix/Hardware_info/",
            "text": "All hardware\n\n\nhwinfo\n\n\n\n\nRAW Devices:\n\n\n# ISO to USB:\ndd bs=4M if=/path/to/<iso_image> of=/dev/sdX && sync\n\n\n\n\nCPU\n\n\nlscpu\ncat /proc/cpuinfo\n\n\n\n\nRAM:\n\n\n# Basic commands:\nvmstat -s\ncat /proc/meminfo\nfree -m\n# Sum of used RAM\nps -eo rss,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf(\"%13.2f Mb \",hr) } { for ( x=4 ; x<=NF ; x++ ) { printf(\"%s \",$x) } print \"\" }' | awk '{print $1}' | paste -sd+ | bc\n# Clean RAM buffer and swap cache\nsync && echo 3 > /proc/sys/vm/drop_caches\n\n\n\n\nVM\n\n\nTo check if server's environment is virtual or real you can use stanasrd Linux commands\n\n\n\n\ncat /proc/scsi/scsi \n\n\n\n\nAttached devices:\nHost: scsi2 Channel: 00 Id: 00 Lun: 00\n  Vendor: VMware   Model: Virtual disk     Rev: 1.0\n  Type:   Direct-Access                    ANSI  SCSI revision: 02\nHost: scsi1 Channel: 00 Id: 00 Lun: 00\n  Vendor: NECVMWar Model: VMware IDE CDR10 Rev: 1.00\n  Type:   CD-ROM                           ANSI  SCSI revision: 05\n\n\n\n\n\n\nethtool -i eth0\n\n\n\n\ndriver: vmxnet3\nversion: 1.1.30.0-k-NAPI\nfirmware-version:\nbus-info: 0000:03:00.0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: yes\nsupports-priv-flags: no\n\n\n\n\n\n\ndmidecode | grep -i vmware\n\n\n\n\n        Manufacturer: VMware, Inc.\n        Product Name: VMware Virtual Platform\n        Serial Number: VMware-42 28 f6 4e 92 c6 36 0a-2e 21 47 23 85 9f 5d 64\n        Description: VMware SVGA II",
            "title": "Hardware info"
        },
        {
            "location": "/Unix/Hardware_info/#all-hardware",
            "text": "hwinfo",
            "title": "All hardware"
        },
        {
            "location": "/Unix/Hardware_info/#raw-devices",
            "text": "# ISO to USB:\ndd bs=4M if=/path/to/<iso_image> of=/dev/sdX && sync",
            "title": "RAW Devices:"
        },
        {
            "location": "/Unix/Hardware_info/#cpu",
            "text": "lscpu\ncat /proc/cpuinfo",
            "title": "CPU"
        },
        {
            "location": "/Unix/Hardware_info/#ram",
            "text": "# Basic commands:\nvmstat -s\ncat /proc/meminfo\nfree -m\n# Sum of used RAM\nps -eo rss,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf(\"%13.2f Mb \",hr) } { for ( x=4 ; x<=NF ; x++ ) { printf(\"%s \",$x) } print \"\" }' | awk '{print $1}' | paste -sd+ | bc\n# Clean RAM buffer and swap cache\nsync && echo 3 > /proc/sys/vm/drop_caches",
            "title": "RAM:"
        },
        {
            "location": "/Unix/Hardware_info/#vm",
            "text": "To check if server's environment is virtual or real you can use stanasrd Linux commands   cat /proc/scsi/scsi    Attached devices:\nHost: scsi2 Channel: 00 Id: 00 Lun: 00\n  Vendor: VMware   Model: Virtual disk     Rev: 1.0\n  Type:   Direct-Access                    ANSI  SCSI revision: 02\nHost: scsi1 Channel: 00 Id: 00 Lun: 00\n  Vendor: NECVMWar Model: VMware IDE CDR10 Rev: 1.00\n  Type:   CD-ROM                           ANSI  SCSI revision: 05   ethtool -i eth0   driver: vmxnet3\nversion: 1.1.30.0-k-NAPI\nfirmware-version:\nbus-info: 0000:03:00.0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: yes\nsupports-priv-flags: no   dmidecode | grep -i vmware           Manufacturer: VMware, Inc.\n        Product Name: VMware Virtual Platform\n        Serial Number: VMware-42 28 f6 4e 92 c6 36 0a-2e 21 47 23 85 9f 5d 64\n        Description: VMware SVGA II",
            "title": "VM"
        },
        {
            "location": "/Unix/KVM/",
            "text": "Create virtual hdd image\n\n\nqemu-img create -o preallocation=metadata -f qcow2 qcow2.img 20G\n\n\n\n\nStart installation of virtual machine with virtual image\n\n\nqemu-system-x86_64 -hda vdisk.img -cdrom /path/to/boot-media.iso -boot d -m 384\n\n\n\n\nRun virtual machine\n\n\nqemu-system-x86_64 vdisk.img -m 384",
            "title": "KVM"
        },
        {
            "location": "/Unix/KVM/#create-virtual-hdd-image",
            "text": "qemu-img create -o preallocation=metadata -f qcow2 qcow2.img 20G",
            "title": "Create virtual hdd image"
        },
        {
            "location": "/Unix/KVM/#start-installation-of-virtual-machine-with-virtual-image",
            "text": "qemu-system-x86_64 -hda vdisk.img -cdrom /path/to/boot-media.iso -boot d -m 384",
            "title": "Start installation of virtual machine with virtual image"
        },
        {
            "location": "/Unix/KVM/#run-virtual-machine",
            "text": "qemu-system-x86_64 vdisk.img -m 384",
            "title": "Run virtual machine"
        },
        {
            "location": "/Unix/Network/",
            "text": "TCPDUMP (with all commands use '| head' optionally)\n\n\n# Capture bunch of packets\ntcpdump -w capture.pcap\n# Show list of unique tcp or udp connections ip addresses\ntcpdump -nn -r capture.pcap 'tcp or udp' | cut -f 3 -d \" \" | cut -f 1-4 -d \".\" | sort | uniq | sort -nr\n# Show list of unique destinations with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 5 -d \" \" | sort | uniq -c | sort -nr\n# Show list of unique sources with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 3 -d \" \" | cut -f 1-4 -d \".\" | sort | uniq -c | sort -nr\n# Search for plain texts (-A)\ntcpdump -Ann -r capture.pcap 'dst port 25 or dst port 514 or dst port 110 or dst port 21 or dst port 53 or dst port 80'\n# Search for top level domains (optiolally for names only: | grep -E '[a-z]')\ntcpdump -nn -r capture.pcap 'port 53' | grep -Ev '(com|ru|net|org|gov|mil|arpa)' | cut -f 9 -d \" \"  \n# Investigate HTTP traffic\ntcpdump -Ann -r capture.pcap 'port 80' | grep 'HTTP' | grep -Ev '(GET|HEAD)'\n# Search HTTP traffic for user-agent list\ntcpdump -Ann -r capture.pcap 'port 80' | grep -Ei 'user-agent' | sort | uniq -c | sort -n\ntcpdump -Ann -r capture.pcap 'port 80' | sed -n '/Mozilla/,$p'\n# Pcap repository (-C filesize in MBytes, -W number of files, -G time in seconds, %s timestamp)\nsudo -b tcpdump -nn -i eth0 -w capture.pcap -C 1 -W 5         \nsudo -b tcpdump -nn -i eth0 -w capture-%s.pcap -G 600 -W 5    \n# Dealing with pcap files\nfor capfile in $(ls *.pcap); do tcpdump -nnr $capfile 'dst port 53'; done  \n\n\n\n\nNetworkManager: show connection info\n\n\nnmcli device show eth0\n\n\n\n\nCheck own IP address\n\n\ncurl -s checkip.dyndns.org\n\n\n\n\nShare current folder over HTTP\n\n\npython2 -m SimpleHTTPServer 8080\npython3 -mhttp.server 8080",
            "title": "Network"
        },
        {
            "location": "/Unix/Network/#tcpdump-with-all-commands-use-head-optionally",
            "text": "# Capture bunch of packets\ntcpdump -w capture.pcap\n# Show list of unique tcp or udp connections ip addresses\ntcpdump -nn -r capture.pcap 'tcp or udp' | cut -f 3 -d \" \" | cut -f 1-4 -d \".\" | sort | uniq | sort -nr\n# Show list of unique destinations with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 5 -d \" \" | sort | uniq -c | sort -nr\n# Show list of unique sources with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 3 -d \" \" | cut -f 1-4 -d \".\" | sort | uniq -c | sort -nr\n# Search for plain texts (-A)\ntcpdump -Ann -r capture.pcap 'dst port 25 or dst port 514 or dst port 110 or dst port 21 or dst port 53 or dst port 80'\n# Search for top level domains (optiolally for names only: | grep -E '[a-z]')\ntcpdump -nn -r capture.pcap 'port 53' | grep -Ev '(com|ru|net|org|gov|mil|arpa)' | cut -f 9 -d \" \"  \n# Investigate HTTP traffic\ntcpdump -Ann -r capture.pcap 'port 80' | grep 'HTTP' | grep -Ev '(GET|HEAD)'\n# Search HTTP traffic for user-agent list\ntcpdump -Ann -r capture.pcap 'port 80' | grep -Ei 'user-agent' | sort | uniq -c | sort -n\ntcpdump -Ann -r capture.pcap 'port 80' | sed -n '/Mozilla/,$p'\n# Pcap repository (-C filesize in MBytes, -W number of files, -G time in seconds, %s timestamp)\nsudo -b tcpdump -nn -i eth0 -w capture.pcap -C 1 -W 5         \nsudo -b tcpdump -nn -i eth0 -w capture-%s.pcap -G 600 -W 5    \n# Dealing with pcap files\nfor capfile in $(ls *.pcap); do tcpdump -nnr $capfile 'dst port 53'; done",
            "title": "TCPDUMP (with all commands use '| head' optionally)"
        },
        {
            "location": "/Unix/Network/#networkmanager-show-connection-info",
            "text": "nmcli device show eth0",
            "title": "NetworkManager: show connection info"
        },
        {
            "location": "/Unix/Network/#check-own-ip-address",
            "text": "curl -s checkip.dyndns.org",
            "title": "Check own IP address"
        },
        {
            "location": "/Unix/Network/#share-current-folder-over-http",
            "text": "python2 -m SimpleHTTPServer 8080\npython3 -mhttp.server 8080",
            "title": "Share current folder over HTTP"
        },
        {
            "location": "/Unix/Processes/",
            "text": "Wait until proceses will gone\n\n\nwhile true; do clear; ps -ef | grep <process>; sleep 5; done\n\n\n\n\nKill all proesses with certain name\n\n\nps ax | grep http | awk '{print $1}' | xargs kill",
            "title": "Processes"
        },
        {
            "location": "/Unix/Processes/#wait-until-proceses-will-gone",
            "text": "while true; do clear; ps -ef | grep <process>; sleep 5; done",
            "title": "Wait until proceses will gone"
        },
        {
            "location": "/Unix/Processes/#kill-all-proesses-with-certain-name",
            "text": "ps ax | grep http | awk '{print $1}' | xargs kill",
            "title": "Kill all proesses with certain name"
        },
        {
            "location": "/Unix/SMS/",
            "text": "Via minicom:\n\n\n\n\nminicom -s\n\n\n\n\nAT+CMGF=1\nAT+CMGS=\"+xxxxxxxxxx\"\nWrite message here. <ctrl+z>\n\n\n\n\nSMSd\n\n\nsmssend +xxxxxxxxxxx 'One-Line Test 02' > /dev/null 2>&1\n\n\n\n\n\n\nExample smsd.conf. Read the manual for a description\n\n\n\n\ndevices = xenium0\nlogfile = /var/log/smsd/smsd.log\nloglevel = 2\n#user = smstools\nuser = nagios\n# 3.1.5 introduced smart logging\n# once your configuration is OK, set log level lower (5 is good in most cases)\nsmart_logging = yes\ninfofile = /run/smsd/smsd.working\npidfile = /run/smsd/smsd.pid\n\n[xenium0]\ndevice = /dev/ttyUSB0\n#pin = 1122\npin = ignore\nbaudrate = 115200\nrtscts = no\n#init = ATE0\n#init = at+cpms=\"sm\",\"sm\",\"\"\n#init = AT+CMGF=1\nloglevel_lac_ci = 8\nincoming = yes\nincoming = high",
            "title": "SMS"
        },
        {
            "location": "/Unix/SMS/#via-minicom",
            "text": "minicom -s   AT+CMGF=1\nAT+CMGS=\"+xxxxxxxxxx\"\nWrite message here. <ctrl+z>",
            "title": "Via minicom:"
        },
        {
            "location": "/Unix/SMS/#smsd",
            "text": "smssend +xxxxxxxxxxx 'One-Line Test 02' > /dev/null 2>&1   Example smsd.conf. Read the manual for a description   devices = xenium0\nlogfile = /var/log/smsd/smsd.log\nloglevel = 2\n#user = smstools\nuser = nagios\n# 3.1.5 introduced smart logging\n# once your configuration is OK, set log level lower (5 is good in most cases)\nsmart_logging = yes\ninfofile = /run/smsd/smsd.working\npidfile = /run/smsd/smsd.pid\n\n[xenium0]\ndevice = /dev/ttyUSB0\n#pin = 1122\npin = ignore\nbaudrate = 115200\nrtscts = no\n#init = ATE0\n#init = at+cpms=\"sm\",\"sm\",\"\"\n#init = AT+CMGF=1\nloglevel_lac_ci = 8\nincoming = yes\nincoming = high",
            "title": "SMSd"
        },
        {
            "location": "/Unix/Skype/",
            "text": "Unable to receive group messages\n\n\nAfter struggling a bit, I found some useful commands:\n    /dumpmsnp - show details about your connection\n    /showplaces - show where you are currently connected\nYou can execute them in any chat window.\n\n*/dumpmsnp* command was showing \"LoggedOut\", but I was online and talking almost normally (except group chats).\n\nSystem: MSNP: Connection Data:\n * Status: LoggedOut\n\nA lot of people are/were suffering from this problem.\n\nTo solve this \"LoggedOut\" issue, try this on any chat window:\n/msnp24\n\nand restart your Skype.\n\nAfter restarting, /dumpmsnp output shows the following status:\n\nSystem: MSNP: Connection Data (MSNP24):\n * Status: LoggedIn\n\nI don't know exactly why, but the /msnp24 command kinds of converted my account to this protocol and now everything works perfectly.",
            "title": "Skype"
        },
        {
            "location": "/Unix/Skype/#unable-to-receive-group-messages",
            "text": "After struggling a bit, I found some useful commands:\n    /dumpmsnp - show details about your connection\n    /showplaces - show where you are currently connected\nYou can execute them in any chat window.\n\n*/dumpmsnp* command was showing \"LoggedOut\", but I was online and talking almost normally (except group chats).\n\nSystem: MSNP: Connection Data:\n * Status: LoggedOut\n\nA lot of people are/were suffering from this problem.\n\nTo solve this \"LoggedOut\" issue, try this on any chat window:\n/msnp24\n\nand restart your Skype.\n\nAfter restarting, /dumpmsnp output shows the following status:\n\nSystem: MSNP: Connection Data (MSNP24):\n * Status: LoggedIn\n\nI don't know exactly why, but the /msnp24 command kinds of converted my account to this protocol and now everything works perfectly.",
            "title": "Unable to receive group messages"
        },
        {
            "location": "/Unix/WINE/",
            "text": "Start\n\n\nWINEARCH=<wine32_or_wine64> WINEPREFIX=/home/wine/<custom_prefix> wine <path_to_executable>",
            "title": "WINE"
        },
        {
            "location": "/Unix/WINE/#start",
            "text": "WINEARCH=<wine32_or_wine64> WINEPREFIX=/home/wine/<custom_prefix> wine <path_to_executable>",
            "title": "Start"
        },
        {
            "location": "/Unix/WiFi/",
            "text": "WPA Supplicant\n\n\nwpa_supplicant -Dnl80211 -iwlp2s0 -c/etc/wpa_supplicant/wpa_supplicant.conf &\n\ncat /etc/wpa_supplicant/wpa_supplicant.conf\n# This network configuration was written by net-setup\nmodules=\"wpa_supplicant\"\nwpa_supplicant_wlp2s0=\"-Dnl80211\"\nconfig_wlp2s0=\"dhcp\" \n\nctrl_interface=/var/run/wpa_supplicant\nctrl_interface_group=0\nap_scan=1\nnetwork={\n   ssid=\"MTS_2140184\"\n   psk=\"0000000000\"\n   priority=5\n}",
            "title": "WiFi"
        },
        {
            "location": "/Unix/WiFi/#wpa-supplicant",
            "text": "wpa_supplicant -Dnl80211 -iwlp2s0 -c/etc/wpa_supplicant/wpa_supplicant.conf &\n\ncat /etc/wpa_supplicant/wpa_supplicant.conf\n# This network configuration was written by net-setup\nmodules=\"wpa_supplicant\"\nwpa_supplicant_wlp2s0=\"-Dnl80211\"\nconfig_wlp2s0=\"dhcp\" \n\nctrl_interface=/var/run/wpa_supplicant\nctrl_interface_group=0\nap_scan=1\nnetwork={\n   ssid=\"MTS_2140184\"\n   psk=\"0000000000\"\n   priority=5\n}",
            "title": "WPA Supplicant"
        },
        {
            "location": "/Windows/CMD_Scripts/",
            "text": "Ping subnet\n\n\nFOR /L %i IN (1,1,254) DO ping -n 1 192.168.10.%i | FIND /i \"Reply\">>c:\\ipaddresses.txt",
            "title": "CMD Scripts"
        },
        {
            "location": "/Windows/CMD_Scripts/#ping-subnet",
            "text": "FOR /L %i IN (1,1,254) DO ping -n 1 192.168.10.%i | FIND /i \"Reply\">>c:\\ipaddresses.txt",
            "title": "Ping subnet"
        },
        {
            "location": "/Windows/CMD_colours/",
            "text": "To change colours in command line console interface you need to add one of following sets of registry keys:\n\n\nDefault\n\n\nWindows Registry Editor Version 5.00\n; Default color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\"ColorTable00\"=dword:00000000\n\"ColorTable08\"=dword:00808080\n; BLUE LBLUE\n\"ColorTable01\"=dword:00800000\n\"ColorTable09\"=dword:00ff0000\n; GREEN LGREEN\n\"ColorTable02\"=dword:00008000\n\"ColorTable10\"=dword:0000ff00\n; CYAN LCYAN\n\"ColorTable03\"=dword:00808000\n\"ColorTable11\"=dword:00ffff00\n; RED LRED\n\"ColorTable04\"=dword:00000080\n\"ColorTable12\"=dword:000000ff\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:00800080\n\"ColorTable13\"=dword:00ff00ff\n; YELLOW LYELLOW\n\"ColorTable06\"=dword:00008080\n\"ColorTable14\"=dword:0000ffff\n; LGRAY WHITE\n\"ColorTable07\"=dword:00c0c0c0\n\"ColorTable15\"=dword:00ffffff\n\n\n\n\nMonokai\n\n\nWindows Registry Editor Version 5.00\n; Monokai color theme for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK   DGRAY\n\"ColorTable00\"=dword:00222827\n\"ColorTable08\"=dword:00414746\n; BLUE    LBLUE\n\"ColorTable01\"=dword:00a64c1d\n\"ColorTable09\"=dword:00ef9566\n; GREEN   LGREEN\n\"ColorTable02\"=dword:0000995d\n\"ColorTable10\"=dword:002ee2a6\n; CYAN    LCYAN\n\"ColorTable03\"=dword:00746a31\n\"ColorTable11\"=dword:00efd966\n; RED     LRED\n\"ColorTable04\"=dword:002900b0\n\"ColorTable12\"=dword:007226f9\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:00b63865\n\"ColorTable13\"=dword:00ff81ae\n; YELLOW  LYELLOW\n\"ColorTable06\"=dword:001f97fd\n\"ColorTable14\"=dword:0074dbe6\n; LGRAY   WHITE\n\"ColorTable07\"=dword:008a908f\n\"ColorTable15\"=dword:00f2f8f8\n\n\n\n\nPastel\n\n\nWindows Registry Editor Version 5.00\n; Low-contrast, pastel color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\"ColorTable00\"=dword:00222222\n\"ColorTable08\"=dword:00454545\n; BLUE LBLUE\n\"ColorTable01\"=dword:00a69a7c\n\"ColorTable09\"=dword:00bfad8f\n; GREEN LGREEN\n\"ColorTable02\"=dword:00557e6c\n\"ColorTable10\"=dword:007db37d\n; CYAN LCYAN\n\"ColorTable03\"=dword:00a18e4c\n\"ColorTable11\"=dword:00d0c16b\n; RED LRED\n\"ColorTable04\"=dword:0041569e\n\"ColorTable12\"=dword:006d89cc\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:009d6d95\n\"ColorTable13\"=dword:00cb8fc1\n; YELLOW LYELLOW\n\"ColorTable06\"=dword:002bafca\n\"ColorTable14\"=dword:0056b5bf\n; LGRAY WHITE\n\"ColorTable07\"=dword:00808080\n\"ColorTable15\"=dword:00cdcdcd\n\n\n\n\nZenburn\n\n\nWindows Registry Editor Version 5.00\n; Zenburn is a low-contrast color scheme\n; for Windows command prompt.\n; See : http://slinky.imukuppi.org/zenburnpage/\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\"ColorTable00\"=dword:003f3f3f\n\"ColorTable08\"=dword:008080c0\n; BLUE LBLUE\n\"ColorTable01\"=dword:00af6464\n\"ColorTable09\"=dword:00ffafaf\n; GREEN LGREEN\n\"ColorTable02\"=dword:00008000\n\"ColorTable10\"=dword:007f9f7f\n; CYAN LCYAN\n\"ColorTable03\"=dword:00808000\n\"ColorTable11\"=dword:00d3d08c\n; RED LRED\n\"ColorTable04\"=dword:00232333\n\"ColorTable12\"=dword:007071e3\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:00aa50aa\n\"ColorTable13\"=dword:00c880c8\n; YELLOW LYELLOW\n\"ColorTable06\"=dword:0000dcdc\n\"ColorTable14\"=dword:00afdff0\n; LGRAY WHITE\n\"ColorTable07\"=dword:00ccdcdc\n\"ColorTable15\"=dword:00ffffff",
            "title": "CMD colours"
        },
        {
            "location": "/Windows/CMD_colours/#default",
            "text": "Windows Registry Editor Version 5.00\n; Default color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\"ColorTable00\"=dword:00000000\n\"ColorTable08\"=dword:00808080\n; BLUE LBLUE\n\"ColorTable01\"=dword:00800000\n\"ColorTable09\"=dword:00ff0000\n; GREEN LGREEN\n\"ColorTable02\"=dword:00008000\n\"ColorTable10\"=dword:0000ff00\n; CYAN LCYAN\n\"ColorTable03\"=dword:00808000\n\"ColorTable11\"=dword:00ffff00\n; RED LRED\n\"ColorTable04\"=dword:00000080\n\"ColorTable12\"=dword:000000ff\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:00800080\n\"ColorTable13\"=dword:00ff00ff\n; YELLOW LYELLOW\n\"ColorTable06\"=dword:00008080\n\"ColorTable14\"=dword:0000ffff\n; LGRAY WHITE\n\"ColorTable07\"=dword:00c0c0c0\n\"ColorTable15\"=dword:00ffffff",
            "title": "Default"
        },
        {
            "location": "/Windows/CMD_colours/#monokai",
            "text": "Windows Registry Editor Version 5.00\n; Monokai color theme for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK   DGRAY\n\"ColorTable00\"=dword:00222827\n\"ColorTable08\"=dword:00414746\n; BLUE    LBLUE\n\"ColorTable01\"=dword:00a64c1d\n\"ColorTable09\"=dword:00ef9566\n; GREEN   LGREEN\n\"ColorTable02\"=dword:0000995d\n\"ColorTable10\"=dword:002ee2a6\n; CYAN    LCYAN\n\"ColorTable03\"=dword:00746a31\n\"ColorTable11\"=dword:00efd966\n; RED     LRED\n\"ColorTable04\"=dword:002900b0\n\"ColorTable12\"=dword:007226f9\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:00b63865\n\"ColorTable13\"=dword:00ff81ae\n; YELLOW  LYELLOW\n\"ColorTable06\"=dword:001f97fd\n\"ColorTable14\"=dword:0074dbe6\n; LGRAY   WHITE\n\"ColorTable07\"=dword:008a908f\n\"ColorTable15\"=dword:00f2f8f8",
            "title": "Monokai"
        },
        {
            "location": "/Windows/CMD_colours/#pastel",
            "text": "Windows Registry Editor Version 5.00\n; Low-contrast, pastel color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\"ColorTable00\"=dword:00222222\n\"ColorTable08\"=dword:00454545\n; BLUE LBLUE\n\"ColorTable01\"=dword:00a69a7c\n\"ColorTable09\"=dword:00bfad8f\n; GREEN LGREEN\n\"ColorTable02\"=dword:00557e6c\n\"ColorTable10\"=dword:007db37d\n; CYAN LCYAN\n\"ColorTable03\"=dword:00a18e4c\n\"ColorTable11\"=dword:00d0c16b\n; RED LRED\n\"ColorTable04\"=dword:0041569e\n\"ColorTable12\"=dword:006d89cc\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:009d6d95\n\"ColorTable13\"=dword:00cb8fc1\n; YELLOW LYELLOW\n\"ColorTable06\"=dword:002bafca\n\"ColorTable14\"=dword:0056b5bf\n; LGRAY WHITE\n\"ColorTable07\"=dword:00808080\n\"ColorTable15\"=dword:00cdcdcd",
            "title": "Pastel"
        },
        {
            "location": "/Windows/CMD_colours/#zenburn",
            "text": "Windows Registry Editor Version 5.00\n; Zenburn is a low-contrast color scheme\n; for Windows command prompt.\n; See : http://slinky.imukuppi.org/zenburnpage/\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\"ColorTable00\"=dword:003f3f3f\n\"ColorTable08\"=dword:008080c0\n; BLUE LBLUE\n\"ColorTable01\"=dword:00af6464\n\"ColorTable09\"=dword:00ffafaf\n; GREEN LGREEN\n\"ColorTable02\"=dword:00008000\n\"ColorTable10\"=dword:007f9f7f\n; CYAN LCYAN\n\"ColorTable03\"=dword:00808000\n\"ColorTable11\"=dword:00d3d08c\n; RED LRED\n\"ColorTable04\"=dword:00232333\n\"ColorTable12\"=dword:007071e3\n; MAGENTA LMAGENTA\n\"ColorTable05\"=dword:00aa50aa\n\"ColorTable13\"=dword:00c880c8\n; YELLOW LYELLOW\n\"ColorTable06\"=dword:0000dcdc\n\"ColorTable14\"=dword:00afdff0\n; LGRAY WHITE\n\"ColorTable07\"=dword:00ccdcdc\n\"ColorTable15\"=dword:00ffffff",
            "title": "Zenburn"
        },
        {
            "location": "/Windows/PowerShell_Scripts/",
            "text": "Show current logged user\n\n\ngwmi win32_computersystem -comp $computer | select USername,Caption,Manufacturer\nGet_WmiObject win32_computersystem -comp $computer | select USername,Caption,Manufacturer\n\n\n\n\nList of logged in users (any user in any time)\n\n\nGet-WmiObject Win32_LoggedOnUser -ComputerName msk-sales-02 | Select __SERVER, Antecedent -Unique | %{\"{0} : {1}\\{2}\" -f $_.__SERVER, $_.Antecedent.ToString().Split('\"')[1],$_.Antecedent.ToString().Split('\"')[3]}\n\n\n\n\nRead from keyboard\n\n\n$variable=read-host \"Enter computer name:\"",
            "title": "PowerShell Scripts"
        },
        {
            "location": "/Windows/PowerShell_Scripts/#show-current-logged-user",
            "text": "gwmi win32_computersystem -comp $computer | select USername,Caption,Manufacturer\nGet_WmiObject win32_computersystem -comp $computer | select USername,Caption,Manufacturer",
            "title": "Show current logged user"
        },
        {
            "location": "/Windows/PowerShell_Scripts/#list-of-logged-in-users-any-user-in-any-time",
            "text": "Get-WmiObject Win32_LoggedOnUser -ComputerName msk-sales-02 | Select __SERVER, Antecedent -Unique | %{\"{0} : {1}\\{2}\" -f $_.__SERVER, $_.Antecedent.ToString().Split('\"')[1],$_.Antecedent.ToString().Split('\"')[3]}",
            "title": "List of logged in users (any user in any time)"
        },
        {
            "location": "/Windows/PowerShell_Scripts/#read-from-keyboard",
            "text": "$variable=read-host \"Enter computer name:\"",
            "title": "Read from keyboard"
        }
    ]
}