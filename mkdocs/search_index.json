{
    "docs": [
        {
            "location": "/", 
            "text": "Command line examples\n\n\nInspired by \nJoshua Levy\n and his great \nThe-Art-Of-Command-Line\n\n\n\n\nIt's only my view on useful commands and this examples are useful for me in first place.\n\n\n\n\nUnix commands\n\n\n\n\nAIX\n\n\nCommands\n\n\nFilesystem\n\n\nHardware info\n\n\nNetwork\n\n\nVersion Control\n\n\n\n\nOracle HowTo\n\n\n\n\nOJDBC Driver", 
            "title": "Home"
        }, 
        {
            "location": "/#command-line-examples", 
            "text": "Inspired by  Joshua Levy  and his great  The-Art-Of-Command-Line   It's only my view on useful commands and this examples are useful for me in first place.", 
            "title": "Command line examples"
        }, 
        {
            "location": "/#unix-commands", 
            "text": "AIX  Commands  Filesystem  Hardware info  Network  Version Control", 
            "title": "Unix commands"
        }, 
        {
            "location": "/#oracle-howto", 
            "text": "OJDBC Driver", 
            "title": "Oracle HowTo"
        }, 
        {
            "location": "/Oracle/OJDBC/", 
            "text": "BUG: 9632480\n\n\nOJDBC 12.1.0.2 - BUG: ORA-01000: maximum open cursors exceeded\n\n\nWe need:\n\n ojdbc7.jar\n\n p19632480_121020_Generic.zip\n* JRE\n\n\n\n\nWe need to update OracleDatabaseMetaData.class in our ojdbc7.jar archive\n\n\n\n\nunzip p19632480_121020_Generic.zip\n\n\n\n\nGet folder ./p19632480_121020_Generic/19632480/files/jdbc/lib/ojdbc7.jar\nAnd place it to ojdbc7.jar location\n\n\nMake shure that your JAVA_HOME is exported\n\n\nChange working directory to ojdbc7.jar location and run:\n\n\n$JAVA_HOME/jar -uf ojdbc7.jar", 
            "title": "OJDBC"
        }, 
        {
            "location": "/Oracle/OJDBC/#bug-9632480", 
            "text": "OJDBC 12.1.0.2 - BUG: ORA-01000: maximum open cursors exceeded  We need:  ojdbc7.jar  p19632480_121020_Generic.zip\n* JRE   We need to update OracleDatabaseMetaData.class in our ojdbc7.jar archive   unzip p19632480_121020_Generic.zip  Get folder ./p19632480_121020_Generic/19632480/files/jdbc/lib/ojdbc7.jar\nAnd place it to ojdbc7.jar location  Make shure that your JAVA_HOME is exported  Change working directory to ojdbc7.jar location and run:  $JAVA_HOME/jar -uf ojdbc7.jar", 
            "title": "BUG: 9632480"
        }, 
        {
            "location": "/Unix/AIX/", 
            "text": "Basic commands:\n\n\n\n\nManagement\n\n\n\n\n# Exit from basic VIOS console to common AIX ksh\noem_setup_env\n# Adminitration and configuration console\nsmit\n\n#If you want to use bash as a login shell, you first have to add it to the\n#list of shells in /etc/security/login.cfg. \n#Then use `chsh` to change your individual setting.\n\n\n\n\n\n\nSoftware installation:\n\n\n\n\ncd \npath_to_package\n\ninutoc .\ninstallp -aXY -d\npath_to_package\n all\n# Check if package is installed or not:\nlslpp -L \npackage_name\n\n\n\n\n\n\n\nMirroring rootvg:\n\n\n\n\nextendvg rootvg hdisk1\nmirrorvg rootvg\nbootlist -m normal hdisk0 hdisk1 \nbosboot -ad hdisk0\nbosboot -ad hdisk1\n# Checking\nbootlist -o -m normal\n\n\n\n\nGPFS:\n\n\n\n\nInstalaltion:\n\n\n\n\n# on each LPAR:\ncd /\npath_to_gpfs_base_package\n/base-3-5/\ninutoc .\ninstallp -aXY -d/\npath_to_gpfs_base_package\n/base-3-5 all\ncd /\npath_to_gpfs_fix_package\n/fix-3-5-10/\ninutoc .\ninstallp -aXY -d/\npath_to_gpfs_fix_package\n/fix-3-5-10 all\nlslpp -L gpfs.\\*\n\n\n\n\n\n\nCreating cluster:\n\n\n\n\n# You need to setup paswordless shh connection between nodes\n# Add this path to /etc/environment on each node\nexport PATH=$PATH:/usr/lpp/mmfs/bin\n\nmmcrcluster -N \nPRIMARY_NODE_HOSTNAME\n:manager-quorum -p PRIMARY_NODE_HOSTNAME -r /usr/bin/ssh -R /usr/bin/scp\nmmchlicense server --accept -N PRIMARY_NODE_HOSTNAME\nmmstartup -a\nmmaddnode -N \nSECONDARY_NODE_HOSTNAME\n\nmmaddnode -N \nTHIRDARY_NODE_HOSTNAME\n\nmmaddnode -N \nN-ARY_NODE_HOSTNAME\n\nmmchcluster -s \nSECONDARY_NODE_HOSTNAME\n\nmmchlicense server --accept -N \nSECONDARY_NODE_HOSTNAME\n\nmmchlicense server --accept -N \nTHIRDARY_NODE_HOSTNAME\n\nmmchlicense server --accept -N \nN-ARY_NODE_HOSTNAME\n\nmmstartup -N \nSECONDARY_NODE_HOSTNAME\n\nmmstartup -N \nTHIRDARY_NODE_HOSTNAME\n\nmmstartup -N \nN-ARY_NODE_HOSTNAME\n\nmmchnode --quorum --manager -N \nSECONDARY_NODE_HOSTNAME\n\n# To check status of cluster:\nmmlscluster\nmmgetstate -a\n\n\n\n\n\n\nCreate GPFS mirror partition:\n\n\n\n\n# On primary node:\nmkdir /etc/gpfs\nvi /etc/gpfs/diskdesk.txt\n### --insert in diskdesk.txt--\nhdiskX:::dataAndMetadata:1:nsd1:\nhdiskY:::dataAndMetadata:2:nsd2:\n### --end of insert--\n\nmmcrnsd -F /etc/gpfs/diskdesk.txt\nmmshutdown -a\nmmchconfig tiebreakerdisks=\nnsd1;nsd2\n\nmmstartup -a\nmmcrfs /mnt/gpfs gpfsfs -F /etc/gpfs/diskdesk.txt -A yes -B 512K -M2 -m2 -R2 -r2 -n 2 -N 50000\nmmlsconfig\nmmmount all -a\nmmchconfig minQuorumNodes=2\ndf -g\n\n\n\n\nNetwork:\n\n\nShared Ethernet adapter coming soon\n\n\n\n\nHardware:\n\n\n# Refresh hardware configuration(aix and vios respectively):\ncfgmgr\ncfgdev\n# Rename hard drive:\nrendev -l \nold_name\n -n \nnew_name\n\nrendev -l hdisk3 -n hdisk33\n# Enable PVID:\nchdev -l hdiskX -a pv=yes\n# Change reserve policy to hard drive\nchdev -l hdiskX -a reserve_policy=no_reserve\n# Clear the owning volume manager from a disk\nchpv -C hdiskX\n\n\n\n\nVirtual devices:\n\n\n# Checking all virtual mappings to particular vhost:\nlsmap -vadapter vhost\n# Make a virtual hard drive for particular vhost:\n# -f - flag to forcing device creation if you're making shared hard drive\nmkvdev [-f] -vdev hdiskX -vadapter vhostX -dev \nvirtual_device_name\n\n# Make a virtual cd-rom device for particular vhost:\nmkvdev -fbo -vadapter vhostX -dev \nvirtual_device_name", 
            "title": "AIX"
        }, 
        {
            "location": "/Unix/AIX/#basic-commands", 
            "text": "Management   # Exit from basic VIOS console to common AIX ksh\noem_setup_env\n# Adminitration and configuration console\nsmit\n\n#If you want to use bash as a login shell, you first have to add it to the\n#list of shells in /etc/security/login.cfg. \n#Then use `chsh` to change your individual setting.   Software installation:   cd  path_to_package \ninutoc .\ninstallp -aXY -d path_to_package  all\n# Check if package is installed or not:\nlslpp -L  package_name    Mirroring rootvg:   extendvg rootvg hdisk1\nmirrorvg rootvg\nbootlist -m normal hdisk0 hdisk1 \nbosboot -ad hdisk0\nbosboot -ad hdisk1\n# Checking\nbootlist -o -m normal", 
            "title": "Basic commands:"
        }, 
        {
            "location": "/Unix/AIX/#gpfs", 
            "text": "Instalaltion:   # on each LPAR:\ncd / path_to_gpfs_base_package /base-3-5/\ninutoc .\ninstallp -aXY -d/ path_to_gpfs_base_package /base-3-5 all\ncd / path_to_gpfs_fix_package /fix-3-5-10/\ninutoc .\ninstallp -aXY -d/ path_to_gpfs_fix_package /fix-3-5-10 all\nlslpp -L gpfs.\\*   Creating cluster:   # You need to setup paswordless shh connection between nodes\n# Add this path to /etc/environment on each node\nexport PATH=$PATH:/usr/lpp/mmfs/bin\n\nmmcrcluster -N  PRIMARY_NODE_HOSTNAME :manager-quorum -p PRIMARY_NODE_HOSTNAME -r /usr/bin/ssh -R /usr/bin/scp\nmmchlicense server --accept -N PRIMARY_NODE_HOSTNAME\nmmstartup -a\nmmaddnode -N  SECONDARY_NODE_HOSTNAME \nmmaddnode -N  THIRDARY_NODE_HOSTNAME \nmmaddnode -N  N-ARY_NODE_HOSTNAME \nmmchcluster -s  SECONDARY_NODE_HOSTNAME \nmmchlicense server --accept -N  SECONDARY_NODE_HOSTNAME \nmmchlicense server --accept -N  THIRDARY_NODE_HOSTNAME \nmmchlicense server --accept -N  N-ARY_NODE_HOSTNAME \nmmstartup -N  SECONDARY_NODE_HOSTNAME \nmmstartup -N  THIRDARY_NODE_HOSTNAME \nmmstartup -N  N-ARY_NODE_HOSTNAME \nmmchnode --quorum --manager -N  SECONDARY_NODE_HOSTNAME \n# To check status of cluster:\nmmlscluster\nmmgetstate -a   Create GPFS mirror partition:   # On primary node:\nmkdir /etc/gpfs\nvi /etc/gpfs/diskdesk.txt\n### --insert in diskdesk.txt--\nhdiskX:::dataAndMetadata:1:nsd1:\nhdiskY:::dataAndMetadata:2:nsd2:\n### --end of insert--\n\nmmcrnsd -F /etc/gpfs/diskdesk.txt\nmmshutdown -a\nmmchconfig tiebreakerdisks= nsd1;nsd2 \nmmstartup -a\nmmcrfs /mnt/gpfs gpfsfs -F /etc/gpfs/diskdesk.txt -A yes -B 512K -M2 -m2 -R2 -r2 -n 2 -N 50000\nmmlsconfig\nmmmount all -a\nmmchconfig minQuorumNodes=2\ndf -g", 
            "title": "GPFS:"
        }, 
        {
            "location": "/Unix/AIX/#network", 
            "text": "Shared Ethernet adapter coming soon", 
            "title": "Network:"
        }, 
        {
            "location": "/Unix/AIX/#hardware", 
            "text": "# Refresh hardware configuration(aix and vios respectively):\ncfgmgr\ncfgdev\n# Rename hard drive:\nrendev -l  old_name  -n  new_name \nrendev -l hdisk3 -n hdisk33\n# Enable PVID:\nchdev -l hdiskX -a pv=yes\n# Change reserve policy to hard drive\nchdev -l hdiskX -a reserve_policy=no_reserve\n# Clear the owning volume manager from a disk\nchpv -C hdiskX", 
            "title": "Hardware:"
        }, 
        {
            "location": "/Unix/AIX/#virtual-devices", 
            "text": "# Checking all virtual mappings to particular vhost:\nlsmap -vadapter vhost\n# Make a virtual hard drive for particular vhost:\n# -f - flag to forcing device creation if you're making shared hard drive\nmkvdev [-f] -vdev hdiskX -vadapter vhostX -dev  virtual_device_name \n# Make a virtual cd-rom device for particular vhost:\nmkvdev -fbo -vadapter vhostX -dev  virtual_device_name", 
            "title": "Virtual devices:"
        }, 
        {
            "location": "/Unix/Audit/", 
            "text": "Why is my server rebooted?\n\n\nlast reboot \nsudo lastcomm | egrep 'reboot|shutdown'\nwho -b\nsa\ncrontab -e\nless /var/log/secure\nlast -x | less\nlast -x | grep shutdown | less\nless /var/log/messages\njournalctl\nutmpdump /var/log/wtmp | egrep 'shutdown|reboot|runlevel'\njournalctl --since=\n2016-6-28 12:00:00", 
            "title": "Audit"
        }, 
        {
            "location": "/Unix/Audit/#why-is-my-server-rebooted", 
            "text": "last reboot \nsudo lastcomm | egrep 'reboot|shutdown'\nwho -b\nsa\ncrontab -e\nless /var/log/secure\nlast -x | less\nlast -x | grep shutdown | less\nless /var/log/messages\njournalctl\nutmpdump /var/log/wtmp | egrep 'shutdown|reboot|runlevel'\njournalctl --since= 2016-6-28 12:00:00", 
            "title": "Why is my server rebooted?"
        }, 
        {
            "location": "/Unix/Commands/", 
            "text": "Package management:\n\n\n\n\nApt:\n\n\n\n\n# Show installed packages\napt --installed list\n# Search for software\napt-cache search \npattern\n\n# Install package\napt-get install \npackage_name\n\n\n\n\n\n\n\nDpkg: \n\n\n\n\n# To get a list of packages installed locally do this in your terminal:\ndpkg --get-selections | grep -v deinstall\n# To get a list of a specific package installed:\ndpkg --get-selections | grep postgres\n# To save that list to a text file called packages on your desktop do this in your terminal:\ndpkg --get-selections | grep -v deinstall \n ~/Desktop/packages\n# Alternatively, simply use\ndpkg -l\n\n\n\n\n\n\nPacman:\n\n\n\n\n# Search for software\npacman -Ss \npattern\n\n# Install package\npacman -S \npackage_name\n\n# Update the system\npacman -Syu\n# Remove orphaned packages (Be careful, double check for list of deleted packages)\npacman -Rscn $(pacman -Qtdq)\npacman -Sc\npacman-optimize \n sync\n\n\n\n\n\n\nYum:\n\n\n\n\n# Search for software\nyum search \npattern\n\n# Install package\nyum install \npackage_name\n\n# Repair \nError: database disk image is malformed\n\nyum clean dbcache\n\n\n\n\nRemote management:\n\n\n\n\nXfreeRDP\n\n\n\n\nxfreerdp [+clipboard]/w:\nWIDTH\n /h:\nHEIGHT\n /drive:\ncuatom_drive_name\n,\npath_to_attach\n /v:\nip\n:\nport\n /u:\nuser_name\n\nxfreerdp +clipboard /w:1600 /h:900 /v:10.15.0.10:3389 /u:Administrator\nxfreerdp +clipboard /w:1800 /h:1000 /u:Adminitatrator /drive:hmc,/home/4T/IT/IBM/HMC/7.9_sp3 /v:10.15.0.10\n\n\n\n\nSecurity:\n\n\n\n\nIPTables\n\n\n\n\n# Show rules\niptables -nvL\niptable -t nat -nvL\n\n\n\n\n\n\nDisabling SELinux\n\n\n\n\nsed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux \n cat /etc/sysconfig/selinux\n\n\n\n\nVirtual and independent environment:\n\n\n\n\nDocker:\n\n\n\n\n# Execute in-docker console\nsudo docker exec -it \ncontainer\n bash\n# Create JSON with container settings\ndocker inspect -f '{{ json .NetworkSettings }}' \ncontainer_id\n | python -mjson.tool\n# Add custom docker registry\nmkdir /etc/systemd/system/docker.service.d/\ntouch /etc/systemd/system/docker.service.d/docker_opts.conf\nvi /etc/systemd/system/docker.service.d/docker_opts.conf\n# --- docker_opts.conf contents ---\n[Service]\nExecStart=\nExecStart=/usr/bin/docker -d -H fd:// --insecure-registry \ndocker_registry_url\n --registry-mirror \nmirror_url\n\n# ---------------------------------\nsystemctl daemon-reload\nservice docker restart\n\n\n\n\n\n\nWINE\n\n\n\n\nWINEARCH=\nwine32_or_wine64\n WINEPREFIX=/home/wine/\ncustom_prefix\n wine \npath_to_executable\n\n\n\n\n\nX Server:\n\n\n\n\nStart full-screen application in different X server\n\n\n\n\n/usr/bin/xinit \npath_to_fullscreen_application\n -- :1\n\n\n\n\n\n\nExport X display to current ssh connection\n\n\n\n\nexport DISPLAY=\n${SSH_CLIENT%% *}\n\n\n\n\n\nMiscellaneous:\n\n\n\n\nTMUX\n\n\n\n\ntmux list-sessions\ntmux attach -t 2\n\n\n\n\n\n\nCool weather\n\n\n\n\ncurl http://wttr.in/moscow\n\n\n\n\n\n\nKill all proesses with certain name\n\n\n\n\nps ax | grep http | awk '{print $1}' | xargs kill", 
            "title": "Commands"
        }, 
        {
            "location": "/Unix/Commands/#package-management", 
            "text": "Apt:   # Show installed packages\napt --installed list\n# Search for software\napt-cache search  pattern \n# Install package\napt-get install  package_name    Dpkg:    # To get a list of packages installed locally do this in your terminal:\ndpkg --get-selections | grep -v deinstall\n# To get a list of a specific package installed:\ndpkg --get-selections | grep postgres\n# To save that list to a text file called packages on your desktop do this in your terminal:\ndpkg --get-selections | grep -v deinstall   ~/Desktop/packages\n# Alternatively, simply use\ndpkg -l   Pacman:   # Search for software\npacman -Ss  pattern \n# Install package\npacman -S  package_name \n# Update the system\npacman -Syu\n# Remove orphaned packages (Be careful, double check for list of deleted packages)\npacman -Rscn $(pacman -Qtdq)\npacman -Sc\npacman-optimize   sync   Yum:   # Search for software\nyum search  pattern \n# Install package\nyum install  package_name \n# Repair  Error: database disk image is malformed \nyum clean dbcache", 
            "title": "Package management:"
        }, 
        {
            "location": "/Unix/Commands/#remote-management", 
            "text": "XfreeRDP   xfreerdp [+clipboard]/w: WIDTH  /h: HEIGHT  /drive: cuatom_drive_name , path_to_attach  /v: ip : port  /u: user_name \nxfreerdp +clipboard /w:1600 /h:900 /v:10.15.0.10:3389 /u:Administrator\nxfreerdp +clipboard /w:1800 /h:1000 /u:Adminitatrator /drive:hmc,/home/4T/IT/IBM/HMC/7.9_sp3 /v:10.15.0.10", 
            "title": "Remote management:"
        }, 
        {
            "location": "/Unix/Commands/#security", 
            "text": "IPTables   # Show rules\niptables -nvL\niptable -t nat -nvL   Disabling SELinux   sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux   cat /etc/sysconfig/selinux", 
            "title": "Security:"
        }, 
        {
            "location": "/Unix/Commands/#virtual-and-independent-environment", 
            "text": "Docker:   # Execute in-docker console\nsudo docker exec -it  container  bash\n# Create JSON with container settings\ndocker inspect -f '{{ json .NetworkSettings }}'  container_id  | python -mjson.tool\n# Add custom docker registry\nmkdir /etc/systemd/system/docker.service.d/\ntouch /etc/systemd/system/docker.service.d/docker_opts.conf\nvi /etc/systemd/system/docker.service.d/docker_opts.conf\n# --- docker_opts.conf contents ---\n[Service]\nExecStart=\nExecStart=/usr/bin/docker -d -H fd:// --insecure-registry  docker_registry_url  --registry-mirror  mirror_url \n# ---------------------------------\nsystemctl daemon-reload\nservice docker restart   WINE   WINEARCH= wine32_or_wine64  WINEPREFIX=/home/wine/ custom_prefix  wine  path_to_executable", 
            "title": "Virtual and independent environment:"
        }, 
        {
            "location": "/Unix/Commands/#x-server", 
            "text": "Start full-screen application in different X server   /usr/bin/xinit  path_to_fullscreen_application  -- :1   Export X display to current ssh connection   export DISPLAY= ${SSH_CLIENT%% *}", 
            "title": "X Server:"
        }, 
        {
            "location": "/Unix/Commands/#miscellaneous", 
            "text": "TMUX   tmux list-sessions\ntmux attach -t 2   Cool weather   curl http://wttr.in/moscow   Kill all proesses with certain name   ps ax | grep http | awk '{print $1}' | xargs kill", 
            "title": "Miscellaneous:"
        }, 
        {
            "location": "/Unix/Filesystem/", 
            "text": "Change permisions recursively\n\n\nYou can use a simple \nScript\n\n\nfind \npath_to_folder\n -type f -print -exec chmod 644 {} \\;\nfind \npath_to_folder\n -type d -print -exec chmod 755 {} \\;\n\n\n\n\nCount files\n\n\nfind . -type f | wc -l\nls | wc -l\n\n\n\n\nRemove file list\n\n\nls | xargs rm\n\n\n\n\nRemove file suffix \"filename\"+\"suffix\"\n\n\nfor i in `find . -type f -name \n*\nsuffix\n*\n`; do dst=`echo $i | sed s/\nsuffix\n//`;mv $i $dst; done\n\n\n\n\nMove all files in one level directory in certain folder to another\n\n\nfind /\npath_to_folder\n/* -prune -type f | xargs -I '{}' mv {} /\npath_to_destination_folder\n/archive/.\n\n\n\n\nSearch for certain file contents\n\n\nfind . -type f -name \n*conf\n -exec echo {} \\; -exec grep 192.168.0.1:3389 {} \\;\n\n\n\n\nShow directories content recursively\n\n\nls -R /path | awk '\n/:$/\nf{s=$0;f=0}\n/:$/\n!f{sub(/:$/,\n);s=$0;f=1;next}\nNF\nf{ print s\n/\n$0 }'\n\n\n\n\nMake dirs with indexes\n\n\nfor i in 0{1..9} {10..39}; do mkdir delete-$i; cd delete-$i; touch del-file-$i; cd ..; done\n\n\n\n\nCreate bunch of files from list in a file:\n\n\n# Predefined number of records\nhead -\nnumber_of_lines\n inventory | awk '{ print $1 }' | xargs -I '{}' \ndestination_folder\n/{}\n#E.g. head -10 inventory | awk '{ print $1 }' | xargs -I '{}' touch host_vars/{}\n\n# Whole list from file\ncat \nfilename\n | awk '{ print $1 }' | xargs -I '{}' \ndestination_folder\n/{}\n#E.g. cat inventory | awk '{ print $1 }' | xargs -I '{}' host_vars/{}\n\n\n\n\nMove bunch of folders:\n\n\nls -1d \nspace separeated folder list\n | xargs -I '{}' mv {} \ndestination\n\n#E.g. ls -1d command_line dotfiles-srv programmming-examples shell_scripts | xargs -I '{}' mv {} github/\n\n\n\n\nMounts\n\n\n#Show information about mounted file systems with 'column' examples**\ndf -h | column -t\nmount -l | column -t", 
            "title": "Filesystem"
        }, 
        {
            "location": "/Unix/Filesystem/#change-permisions-recursively", 
            "text": "You can use a simple  Script  find  path_to_folder  -type f -print -exec chmod 644 {} \\;\nfind  path_to_folder  -type d -print -exec chmod 755 {} \\;", 
            "title": "Change permisions recursively"
        }, 
        {
            "location": "/Unix/Filesystem/#count-files", 
            "text": "find . -type f | wc -l\nls | wc -l", 
            "title": "Count files"
        }, 
        {
            "location": "/Unix/Filesystem/#remove-file-list", 
            "text": "ls | xargs rm", 
            "title": "Remove file list"
        }, 
        {
            "location": "/Unix/Filesystem/#remove-file-suffix-filenamesuffix", 
            "text": "for i in `find . -type f -name  * suffix * `; do dst=`echo $i | sed s/ suffix //`;mv $i $dst; done", 
            "title": "Remove file suffix \"filename\"+\"suffix\""
        }, 
        {
            "location": "/Unix/Filesystem/#move-all-files-in-one-level-directory-in-certain-folder-to-another", 
            "text": "find / path_to_folder /* -prune -type f | xargs -I '{}' mv {} / path_to_destination_folder /archive/.", 
            "title": "Move all files in one level directory in certain folder to another"
        }, 
        {
            "location": "/Unix/Filesystem/#search-for-certain-file-contents", 
            "text": "find . -type f -name  *conf  -exec echo {} \\; -exec grep 192.168.0.1:3389 {} \\;", 
            "title": "Search for certain file contents"
        }, 
        {
            "location": "/Unix/Filesystem/#show-directories-content-recursively", 
            "text": "ls -R /path | awk '\n/:$/ f{s=$0;f=0}\n/:$/ !f{sub(/:$/, );s=$0;f=1;next}\nNF f{ print s / $0 }'", 
            "title": "Show directories content recursively"
        }, 
        {
            "location": "/Unix/Filesystem/#make-dirs-with-indexes", 
            "text": "for i in 0{1..9} {10..39}; do mkdir delete-$i; cd delete-$i; touch del-file-$i; cd ..; done", 
            "title": "Make dirs with indexes"
        }, 
        {
            "location": "/Unix/Filesystem/#create-bunch-of-files-from-list-in-a-file", 
            "text": "# Predefined number of records\nhead - number_of_lines  inventory | awk '{ print $1 }' | xargs -I '{}'  destination_folder /{}\n#E.g. head -10 inventory | awk '{ print $1 }' | xargs -I '{}' touch host_vars/{}\n\n# Whole list from file\ncat  filename  | awk '{ print $1 }' | xargs -I '{}'  destination_folder /{}\n#E.g. cat inventory | awk '{ print $1 }' | xargs -I '{}' host_vars/{}", 
            "title": "Create bunch of files from list in a file:"
        }, 
        {
            "location": "/Unix/Filesystem/#move-bunch-of-folders", 
            "text": "ls -1d  space separeated folder list  | xargs -I '{}' mv {}  destination \n#E.g. ls -1d command_line dotfiles-srv programmming-examples shell_scripts | xargs -I '{}' mv {} github/", 
            "title": "Move bunch of folders:"
        }, 
        {
            "location": "/Unix/Filesystem/#mounts", 
            "text": "#Show information about mounted file systems with 'column' examples**\ndf -h | column -t\nmount -l | column -t", 
            "title": "Mounts"
        }, 
        {
            "location": "/Unix/Hardware_info/", 
            "text": "All hardware\n\n\nhwinfo\n\n\n\n\nRAW Devices:\n\n\n# ISO to USB:\ndd bs=4M if=/path/to/\niso_image\n of=/dev/sdX \n sync\n\n\n\n\nCPU\n\n\nlscpu\ncat /proc/cpuinfo\n\n\n\n\nRAM:\n\n\n# Basic commands:\nvmstat -s\ncat /proc/meminfo\nfree -m\n# Sum of used RAM\nps -eo rss,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf(\n%13.2f Mb \n,hr) } { for ( x=4 ; x\n=NF ; x++ ) { printf(\n%s \n,$x) } print \n }' | awk '{print $1}' | paste -sd+ | bc\n# Clean RAM buffer and swap cache\nsync \n echo 3 \n /proc/sys/vm/drop_caches\n\n\n\n\nVM\n\n\nTo check if server's environment is virtual or real you can use stanasrd Linux commands\n\n\n\n\ncat /proc/scsi/scsi \n\n\n\n\nAttached devices:\nHost: scsi2 Channel: 00 Id: 00 Lun: 00\n  Vendor: VMware   Model: Virtual disk     Rev: 1.0\n  Type:   Direct-Access                    ANSI  SCSI revision: 02\nHost: scsi1 Channel: 00 Id: 00 Lun: 00\n  Vendor: NECVMWar Model: VMware IDE CDR10 Rev: 1.00\n  Type:   CD-ROM                           ANSI  SCSI revision: 05\n\n\n\n\n\n\nethtool -i eth0\n\n\n\n\ndriver: vmxnet3\nversion: 1.1.30.0-k-NAPI\nfirmware-version:\nbus-info: 0000:03:00.0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: yes\nsupports-priv-flags: no\n\n\n\n\n\n\ndmidecode | grep -i vmware\n\n\n\n\n        Manufacturer: VMware, Inc.\n        Product Name: VMware Virtual Platform\n        Serial Number: VMware-42 28 f6 4e 92 c6 36 0a-2e 21 47 23 85 9f 5d 64\n        Description: VMware SVGA II", 
            "title": "Hardware info"
        }, 
        {
            "location": "/Unix/Hardware_info/#all-hardware", 
            "text": "hwinfo", 
            "title": "All hardware"
        }, 
        {
            "location": "/Unix/Hardware_info/#raw-devices", 
            "text": "# ISO to USB:\ndd bs=4M if=/path/to/ iso_image  of=/dev/sdX   sync", 
            "title": "RAW Devices:"
        }, 
        {
            "location": "/Unix/Hardware_info/#cpu", 
            "text": "lscpu\ncat /proc/cpuinfo", 
            "title": "CPU"
        }, 
        {
            "location": "/Unix/Hardware_info/#ram", 
            "text": "# Basic commands:\nvmstat -s\ncat /proc/meminfo\nfree -m\n# Sum of used RAM\nps -eo rss,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf( %13.2f Mb  ,hr) } { for ( x=4 ; x =NF ; x++ ) { printf( %s  ,$x) } print   }' | awk '{print $1}' | paste -sd+ | bc\n# Clean RAM buffer and swap cache\nsync   echo 3   /proc/sys/vm/drop_caches", 
            "title": "RAM:"
        }, 
        {
            "location": "/Unix/Hardware_info/#vm", 
            "text": "To check if server's environment is virtual or real you can use stanasrd Linux commands   cat /proc/scsi/scsi    Attached devices:\nHost: scsi2 Channel: 00 Id: 00 Lun: 00\n  Vendor: VMware   Model: Virtual disk     Rev: 1.0\n  Type:   Direct-Access                    ANSI  SCSI revision: 02\nHost: scsi1 Channel: 00 Id: 00 Lun: 00\n  Vendor: NECVMWar Model: VMware IDE CDR10 Rev: 1.00\n  Type:   CD-ROM                           ANSI  SCSI revision: 05   ethtool -i eth0   driver: vmxnet3\nversion: 1.1.30.0-k-NAPI\nfirmware-version:\nbus-info: 0000:03:00.0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: yes\nsupports-priv-flags: no   dmidecode | grep -i vmware           Manufacturer: VMware, Inc.\n        Product Name: VMware Virtual Platform\n        Serial Number: VMware-42 28 f6 4e 92 c6 36 0a-2e 21 47 23 85 9f 5d 64\n        Description: VMware SVGA II", 
            "title": "VM"
        }, 
        {
            "location": "/Unix/Network/", 
            "text": "TCPDUMP (with all commands use '| head' optionally)\n\n\n# Capture bunch of packets\ntcpdump -w capture.pcap\n# Show list of unique tcp or udp connections ip addresses\ntcpdump -nn -r capture.pcap 'tcp or udp' | cut -f 3 -d \n \n | cut -f 1-4 -d \n.\n | sort | uniq | sort -nr\n# Show list of unique destinations with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 5 -d \n \n | sort | uniq -c | sort -nr\n# Show list of unique sources with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 3 -d \n \n | cut -f 1-4 -d \n.\n | sort | uniq -c | sort -nr\n# Search for plain texts (-A)\ntcpdump -Ann -r capture.pcap 'dst port 25 or dst port 514 or dst port 110 or dst port 21 or dst port 53 or dst port 80'\n# Search for top level domains (optiolally for names only: | grep -E '[a-z]')\ntcpdump -nn -r capture.pcap 'port 53' | grep -Ev '(com|ru|net|org|gov|mil|arpa)' | cut -f 9 -d \n \n  \n# Investigate HTTP traffic\ntcpdump -Ann -r capture.pcap 'port 80' | grep 'HTTP' | grep -Ev '(GET|HEAD)'\n# Search HTTP traffic for user-agent list\ntcpdump -Ann -r capture.pcap 'port 80' | grep -Ei 'user-agent' | sort | uniq -c | sort -n\ntcpdump -Ann -r capture.pcap 'port 80' | sed -n '/Mozilla/,$p'\n# Pcap repository (-C filesize in MBytes, -W number of files, -G time in seconds, %s timestamp)\nsudo -b tcpdump -nn -i eth0 -w capture.pcap -C 1 -W 5         \nsudo -b tcpdump -nn -i eth0 -w capture-%s.pcap -G 600 -W 5    \n# Dealing with pcap files\nfor capfile in $(ls *.pcap); do tcpdump -nnr $capfile 'dst port 53'; done  \n\n\n\n\nNetworkManager: show connection info\n\n\nnmcli device show eth0\n\n\n\n\nCheck own IP address\n\n\ncurl -s checkip.dyndns.org\n\n\n\n\nShare current folder over HTTP\n\n\npython2 -m SimpleHTTPServer 8080\npython3 -mhttp.server 8080", 
            "title": "Network"
        }, 
        {
            "location": "/Unix/Network/#tcpdump-with-all-commands-use-head-optionally", 
            "text": "# Capture bunch of packets\ntcpdump -w capture.pcap\n# Show list of unique tcp or udp connections ip addresses\ntcpdump -nn -r capture.pcap 'tcp or udp' | cut -f 3 -d     | cut -f 1-4 -d  .  | sort | uniq | sort -nr\n# Show list of unique destinations with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 5 -d     | sort | uniq -c | sort -nr\n# Show list of unique sources with SYN flag(\u2018tcp[13]=2\u2019)\ntcpdump -nn -r capture.pcap 'tcp[13]=2' | cut -f 3 -d     | cut -f 1-4 -d  .  | sort | uniq -c | sort -nr\n# Search for plain texts (-A)\ntcpdump -Ann -r capture.pcap 'dst port 25 or dst port 514 or dst port 110 or dst port 21 or dst port 53 or dst port 80'\n# Search for top level domains (optiolally for names only: | grep -E '[a-z]')\ntcpdump -nn -r capture.pcap 'port 53' | grep -Ev '(com|ru|net|org|gov|mil|arpa)' | cut -f 9 -d      \n# Investigate HTTP traffic\ntcpdump -Ann -r capture.pcap 'port 80' | grep 'HTTP' | grep -Ev '(GET|HEAD)'\n# Search HTTP traffic for user-agent list\ntcpdump -Ann -r capture.pcap 'port 80' | grep -Ei 'user-agent' | sort | uniq -c | sort -n\ntcpdump -Ann -r capture.pcap 'port 80' | sed -n '/Mozilla/,$p'\n# Pcap repository (-C filesize in MBytes, -W number of files, -G time in seconds, %s timestamp)\nsudo -b tcpdump -nn -i eth0 -w capture.pcap -C 1 -W 5         \nsudo -b tcpdump -nn -i eth0 -w capture-%s.pcap -G 600 -W 5    \n# Dealing with pcap files\nfor capfile in $(ls *.pcap); do tcpdump -nnr $capfile 'dst port 53'; done", 
            "title": "TCPDUMP (with all commands use '| head' optionally)"
        }, 
        {
            "location": "/Unix/Network/#networkmanager-show-connection-info", 
            "text": "nmcli device show eth0", 
            "title": "NetworkManager: show connection info"
        }, 
        {
            "location": "/Unix/Network/#check-own-ip-address", 
            "text": "curl -s checkip.dyndns.org", 
            "title": "Check own IP address"
        }, 
        {
            "location": "/Unix/Network/#share-current-folder-over-http", 
            "text": "python2 -m SimpleHTTPServer 8080\npython3 -mhttp.server 8080", 
            "title": "Share current folder over HTTP"
        }, 
        {
            "location": "/Unix/Version_Control/", 
            "text": "Git: Global settings\n\n\ngit config --global user.name \nYour Name\n\ngit config --global user.email your@e-mail.com\n\n\n\n\nGit: Create new repository\n\n\nmkdir -p \npath_to_repository\n\ncd \npath_to_repository\n\ngit add .\ngit commit -m \nInitialization\n\ngit remote add origin https://github.com/username/\nrepository\n.git\ngit push -u origin master\ngit checkout \n\n\n\n\nGit: New commit\n\n\n# Addition of new files with automatic staging of deleted and modified files\ngit add .\ngit commit -a -m \nnew commentary\n\ngit push -u origin master\n\n\n\n\nGit: update local reposytory from remote\n\n\n# Fentch + Merge\ngit pull\n# Fetch only\ngit fetch\n# Fetch changes from remote repository with modified local repository\ngit commit -a -m \nnew commentary\n\ngit pull rebase\n# pull remote with overwrite local changes\ngit fetch --all\ngit reset --hard origin/master\n\n\n\n\nGit: Working with bunch of  repositories\n\n\n# Last commits\nfor d in `ls`; do cd $d; git log --pretty=format:\n%h - %an, %ar : %s\n -1; cd ..; done\n# Mass checkout\nfor d in `ls`; do cd $d; git checkout; cd ..; done\n\n\n\n\nGitHub: Independent history catalogs of git repository\n\n\n# Makes a bunch of history folders formatted by the next way: \nrepository\n-\nnumber_of_commit\n-\ncommit_hash\n\n# Check commit_list.end for mistakes, you need simple list of commits\ngit clone \nrepository_url\n \nrepository\n\ncd \nrepository\n \n git log --pretty=format:\n%h\n \n ../commit_list \n cd ..\ntac commit_list \n commit_list.end \ni=1; for cid in `cat commit_list.end`; do cp -r \nrepository\n \nrepository\n-$i-$cid; cd \nrepository\n-$i-$cid; git checkout $cid; cd ..; ((i=i+1)); done\n\n\n\n\nGitHub: Clone all user's repository\n\n\n# Get complete list of user's repositories in JSON file\ncurl -s https://api.github.com/users/\nusername\n/repos?per_page=200 \n repo.list.json\npython -c \nimport json,sys,os;file = open('repo.list.json' ,'r');obj = json.load(file);obj_size = len(obj);cmd = 'git clone  ';[os.system(cmd + obj[x]['clone_url']) for x in range(0, obj_size)];file.close()\n\n# And dont forget about \nspace\n(%20, \n \n) in cmd = 'git clone ', it's completely nessesary\n# Another way to clone up to 200 user's repos(just in shell): \ncurl -s https://api.github.com/users/keepbot/repos?per_page=200 | jq '.[] | .\nclone_url\n' | xargs -I '{}' git clone {}", 
            "title": "Version Control"
        }, 
        {
            "location": "/Unix/Version_Control/#git-global-settings", 
            "text": "git config --global user.name  Your Name \ngit config --global user.email your@e-mail.com", 
            "title": "Git: Global settings"
        }, 
        {
            "location": "/Unix/Version_Control/#git-create-new-repository", 
            "text": "mkdir -p  path_to_repository \ncd  path_to_repository \ngit add .\ngit commit -m  Initialization \ngit remote add origin https://github.com/username/ repository .git\ngit push -u origin master\ngit checkout", 
            "title": "Git: Create new repository"
        }, 
        {
            "location": "/Unix/Version_Control/#git-new-commit", 
            "text": "# Addition of new files with automatic staging of deleted and modified files\ngit add .\ngit commit -a -m  new commentary \ngit push -u origin master", 
            "title": "Git: New commit"
        }, 
        {
            "location": "/Unix/Version_Control/#git-update-local-reposytory-from-remote", 
            "text": "# Fentch + Merge\ngit pull\n# Fetch only\ngit fetch\n# Fetch changes from remote repository with modified local repository\ngit commit -a -m  new commentary \ngit pull rebase\n# pull remote with overwrite local changes\ngit fetch --all\ngit reset --hard origin/master", 
            "title": "Git: update local reposytory from remote"
        }, 
        {
            "location": "/Unix/Version_Control/#git-working-with-bunch-of-repositories", 
            "text": "# Last commits\nfor d in `ls`; do cd $d; git log --pretty=format: %h - %an, %ar : %s  -1; cd ..; done\n# Mass checkout\nfor d in `ls`; do cd $d; git checkout; cd ..; done", 
            "title": "Git: Working with bunch of  repositories"
        }, 
        {
            "location": "/Unix/Version_Control/#github-independent-history-catalogs-of-git-repository", 
            "text": "# Makes a bunch of history folders formatted by the next way:  repository - number_of_commit - commit_hash \n# Check commit_list.end for mistakes, you need simple list of commits\ngit clone  repository_url   repository \ncd  repository    git log --pretty=format: %h    ../commit_list   cd ..\ntac commit_list   commit_list.end \ni=1; for cid in `cat commit_list.end`; do cp -r  repository   repository -$i-$cid; cd  repository -$i-$cid; git checkout $cid; cd ..; ((i=i+1)); done", 
            "title": "GitHub: Independent history catalogs of git repository"
        }, 
        {
            "location": "/Unix/Version_Control/#github-clone-all-users-repository", 
            "text": "# Get complete list of user's repositories in JSON file\ncurl -s https://api.github.com/users/ username /repos?per_page=200   repo.list.json\npython -c  import json,sys,os;file = open('repo.list.json' ,'r');obj = json.load(file);obj_size = len(obj);cmd = 'git clone  ';[os.system(cmd + obj[x]['clone_url']) for x in range(0, obj_size)];file.close() \n# And dont forget about  space (%20,    ) in cmd = 'git clone ', it's completely nessesary\n# Another way to clone up to 200 user's repos(just in shell): \ncurl -s https://api.github.com/users/keepbot/repos?per_page=200 | jq '.[] | . clone_url ' | xargs -I '{}' git clone {}", 
            "title": "GitHub: Clone all user's repository"
        }, 
        {
            "location": "/Windows/CMD_colours/", 
            "text": "To change colours in command line console interface you need to add one of following sets of registry keys:\n\n\nDefault\n\n\nWindows Registry Editor Version 5.00\n; Default color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\nColorTable00\n=dword:00000000\n\nColorTable08\n=dword:00808080\n; BLUE LBLUE\n\nColorTable01\n=dword:00800000\n\nColorTable09\n=dword:00ff0000\n; GREEN LGREEN\n\nColorTable02\n=dword:00008000\n\nColorTable10\n=dword:0000ff00\n; CYAN LCYAN\n\nColorTable03\n=dword:00808000\n\nColorTable11\n=dword:00ffff00\n; RED LRED\n\nColorTable04\n=dword:00000080\n\nColorTable12\n=dword:000000ff\n; MAGENTA LMAGENTA\n\nColorTable05\n=dword:00800080\n\nColorTable13\n=dword:00ff00ff\n; YELLOW LYELLOW\n\nColorTable06\n=dword:00008080\n\nColorTable14\n=dword:0000ffff\n; LGRAY WHITE\n\nColorTable07\n=dword:00c0c0c0\n\nColorTable15\n=dword:00ffffff\n\n\n\n\nMonokai\n\n\nWindows Registry Editor Version 5.00\n; Monokai color theme for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK   DGRAY\n\nColorTable00\n=dword:00222827\n\nColorTable08\n=dword:00414746\n; BLUE    LBLUE\n\nColorTable01\n=dword:00a64c1d\n\nColorTable09\n=dword:00ef9566\n; GREEN   LGREEN\n\nColorTable02\n=dword:0000995d\n\nColorTable10\n=dword:002ee2a6\n; CYAN    LCYAN\n\nColorTable03\n=dword:00746a31\n\nColorTable11\n=dword:00efd966\n; RED     LRED\n\nColorTable04\n=dword:002900b0\n\nColorTable12\n=dword:007226f9\n; MAGENTA LMAGENTA\n\nColorTable05\n=dword:00b63865\n\nColorTable13\n=dword:00ff81ae\n; YELLOW  LYELLOW\n\nColorTable06\n=dword:001f97fd\n\nColorTable14\n=dword:0074dbe6\n; LGRAY   WHITE\n\nColorTable07\n=dword:008a908f\n\nColorTable15\n=dword:00f2f8f8\n\n\n\n\nPastel\n\n\nWindows Registry Editor Version 5.00\n; Low-contrast, pastel color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\nColorTable00\n=dword:00222222\n\nColorTable08\n=dword:00454545\n; BLUE LBLUE\n\nColorTable01\n=dword:00a69a7c\n\nColorTable09\n=dword:00bfad8f\n; GREEN LGREEN\n\nColorTable02\n=dword:00557e6c\n\nColorTable10\n=dword:007db37d\n; CYAN LCYAN\n\nColorTable03\n=dword:00a18e4c\n\nColorTable11\n=dword:00d0c16b\n; RED LRED\n\nColorTable04\n=dword:0041569e\n\nColorTable12\n=dword:006d89cc\n; MAGENTA LMAGENTA\n\nColorTable05\n=dword:009d6d95\n\nColorTable13\n=dword:00cb8fc1\n; YELLOW LYELLOW\n\nColorTable06\n=dword:002bafca\n\nColorTable14\n=dword:0056b5bf\n; LGRAY WHITE\n\nColorTable07\n=dword:00808080\n\nColorTable15\n=dword:00cdcdcd\n\n\n\n\nZenburn\n\n\nWindows Registry Editor Version 5.00\n; Zenburn is a low-contrast color scheme\n; for Windows command prompt.\n; See : http://slinky.imukuppi.org/zenburnpage/\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY\n\nColorTable00\n=dword:003f3f3f\n\nColorTable08\n=dword:008080c0\n; BLUE LBLUE\n\nColorTable01\n=dword:00af6464\n\nColorTable09\n=dword:00ffafaf\n; GREEN LGREEN\n\nColorTable02\n=dword:00008000\n\nColorTable10\n=dword:007f9f7f\n; CYAN LCYAN\n\nColorTable03\n=dword:00808000\n\nColorTable11\n=dword:00d3d08c\n; RED LRED\n\nColorTable04\n=dword:00232333\n\nColorTable12\n=dword:007071e3\n; MAGENTA LMAGENTA\n\nColorTable05\n=dword:00aa50aa\n\nColorTable13\n=dword:00c880c8\n; YELLOW LYELLOW\n\nColorTable06\n=dword:0000dcdc\n\nColorTable14\n=dword:00afdff0\n; LGRAY WHITE\n\nColorTable07\n=dword:00ccdcdc\n\nColorTable15\n=dword:00ffffff", 
            "title": "CMD colours"
        }, 
        {
            "location": "/Windows/CMD_colours/#default", 
            "text": "Windows Registry Editor Version 5.00\n; Default color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY ColorTable00 =dword:00000000 ColorTable08 =dword:00808080\n; BLUE LBLUE ColorTable01 =dword:00800000 ColorTable09 =dword:00ff0000\n; GREEN LGREEN ColorTable02 =dword:00008000 ColorTable10 =dword:0000ff00\n; CYAN LCYAN ColorTable03 =dword:00808000 ColorTable11 =dword:00ffff00\n; RED LRED ColorTable04 =dword:00000080 ColorTable12 =dword:000000ff\n; MAGENTA LMAGENTA ColorTable05 =dword:00800080 ColorTable13 =dword:00ff00ff\n; YELLOW LYELLOW ColorTable06 =dword:00008080 ColorTable14 =dword:0000ffff\n; LGRAY WHITE ColorTable07 =dword:00c0c0c0 ColorTable15 =dword:00ffffff", 
            "title": "Default"
        }, 
        {
            "location": "/Windows/CMD_colours/#monokai", 
            "text": "Windows Registry Editor Version 5.00\n; Monokai color theme for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK   DGRAY ColorTable00 =dword:00222827 ColorTable08 =dword:00414746\n; BLUE    LBLUE ColorTable01 =dword:00a64c1d ColorTable09 =dword:00ef9566\n; GREEN   LGREEN ColorTable02 =dword:0000995d ColorTable10 =dword:002ee2a6\n; CYAN    LCYAN ColorTable03 =dword:00746a31 ColorTable11 =dword:00efd966\n; RED     LRED ColorTable04 =dword:002900b0 ColorTable12 =dword:007226f9\n; MAGENTA LMAGENTA ColorTable05 =dword:00b63865 ColorTable13 =dword:00ff81ae\n; YELLOW  LYELLOW ColorTable06 =dword:001f97fd ColorTable14 =dword:0074dbe6\n; LGRAY   WHITE ColorTable07 =dword:008a908f ColorTable15 =dword:00f2f8f8", 
            "title": "Monokai"
        }, 
        {
            "location": "/Windows/CMD_colours/#pastel", 
            "text": "Windows Registry Editor Version 5.00\n; Low-contrast, pastel color scheme\n; for Windows command prompt.\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY ColorTable00 =dword:00222222 ColorTable08 =dword:00454545\n; BLUE LBLUE ColorTable01 =dword:00a69a7c ColorTable09 =dword:00bfad8f\n; GREEN LGREEN ColorTable02 =dword:00557e6c ColorTable10 =dword:007db37d\n; CYAN LCYAN ColorTable03 =dword:00a18e4c ColorTable11 =dword:00d0c16b\n; RED LRED ColorTable04 =dword:0041569e ColorTable12 =dword:006d89cc\n; MAGENTA LMAGENTA ColorTable05 =dword:009d6d95 ColorTable13 =dword:00cb8fc1\n; YELLOW LYELLOW ColorTable06 =dword:002bafca ColorTable14 =dword:0056b5bf\n; LGRAY WHITE ColorTable07 =dword:00808080 ColorTable15 =dword:00cdcdcd", 
            "title": "Pastel"
        }, 
        {
            "location": "/Windows/CMD_colours/#zenburn", 
            "text": "Windows Registry Editor Version 5.00\n; Zenburn is a low-contrast color scheme\n; for Windows command prompt.\n; See : http://slinky.imukuppi.org/zenburnpage/\n\n; Values stored as 00-BB-GG-RR\n[HKEY_CURRENT_USER\\Console]\n; BLACK DGRAY ColorTable00 =dword:003f3f3f ColorTable08 =dword:008080c0\n; BLUE LBLUE ColorTable01 =dword:00af6464 ColorTable09 =dword:00ffafaf\n; GREEN LGREEN ColorTable02 =dword:00008000 ColorTable10 =dword:007f9f7f\n; CYAN LCYAN ColorTable03 =dword:00808000 ColorTable11 =dword:00d3d08c\n; RED LRED ColorTable04 =dword:00232333 ColorTable12 =dword:007071e3\n; MAGENTA LMAGENTA ColorTable05 =dword:00aa50aa ColorTable13 =dword:00c880c8\n; YELLOW LYELLOW ColorTable06 =dword:0000dcdc ColorTable14 =dword:00afdff0\n; LGRAY WHITE ColorTable07 =dword:00ccdcdc ColorTable15 =dword:00ffffff", 
            "title": "Zenburn"
        }
    ]
}